{"version":3,"sources":["helpers/urlSlug.js","components/Footer/Footer.js","components/Loading/DoubleRing.js","components/Doughnut/CustomDoughnut.js","helpers/handleDate.js","components/KeywordPage/MovieCard.js","../node_modules/fast-average-color/dist/index.esm.js","api/fetchCollection.js","components/CollectionPage/HeaderCollection.js","components/CollectionPage/ListMovie.js","components/CollectionPage/index.js","pages/Collection.js"],"names":["chuyenDoiUrl","str","toLowerCase","replace","Footer","className","to","src","alt","width","height","target","rel","DoubleRing","style","position","top","left","transform","useStyles","makeStyles","theme","customDoughnut","props","borderRadius","backgroundColor","padding","size2","color","display","justifyContent","alignItems","absoluteCenter","marginLeft","fontSize","size","fontWeight","verticalAlign","CustomDoughnut","vote_average","rounded","offAnimation","classes","data","datasets","grey","fade","pointHoverRadius","borderWidth","options","responsive","maintainAspectRatio","cutoutPercentage","animation","duration","tooltips","enabled","hover","mode","legend","elements","arc","variant","Math","round","handleDate","date","moment","format","MovieCard","value","id","title","poster_path","release_date","overview","toHex","num","toString","length","arrayToHex","arr","map","join","isIgnoredColor","index","ignoredColor","i","isIgnoredColorAsNumbers","isIgnoredRGBColor","isIgnoredRGBAColor","redIgnored","greenIgnored","blueIgnored","alphaIgnored","threshold","alphaData","alphaInRange","inRange","isIgnoredRGBAColorWithThreshold","colorComponent","ignoredColorComponent","dominantAlgorithm","len","colorHash","step","red","green","blue","alpha","key","max","Object","keys","sort","a","b","countA","countB","redTotal","greenTotal","blueTotal","alphaTotal","count","defaultColor","simpleAlgorithm","sqrtAlgorithm","sqrt","getDefaultColor","getOption","name","defaultValue","ERROR_PREFIX","outputError","text","details","silent","console","error","getError","Error","FastAverageColor","resource","Promise","reject","img","Image","crossOrigin","this","_bindImageEvents","complete","result","getColor","resolve","prepareResult","originalSize","factor","srcLeft","srcTop","srcWidth","srcHeight","destWidth","destHeight","prepareSizeAndPosition","HTMLImageElement","naturalWidth","naturalHeight","search","HTMLVideoElement","videoWidth","videoHeight","getOriginalSize","_ctx","_canvas","window","OffscreenCanvas","document","createElement","getContext","clearRect","drawImage","bitmapData","getImageData","getColorFromArray4","e","arrLength","algorithm","Array","isArray","slice","rgb","rgba","concat","isDarkColor","hex","hexa","isDark","isLight","onload","unbindEvents","onerror","onabort","removeEventListener","addEventListener","fetchCollection","axios","get","API_URL","params","api_key","API_KEY","checkData","IMAGE_URL","POSTER_SIZE","no_poster","backdrop_path","BACKDROP_SIZE","no_image","parts","item","reduce","acc","cur","log","styledDoughnut","paddingRight","HeaderCollection","collection","data2","isMobileDevice","useMediaQuery","query","backdrop","backgroundImage","minHeight","loading","marginBottom","Grid","ListMovie","movie","Index","useState","imgsLoaded","setImgsLoaded","match","setData","dt","setDt","dt2","setDt2","useEffect","then","res","hihi","haha","getColorAsync","contrast","m","r","g","substring","x","parseInt","catch","fetch","Collection","CollectionPage"],"mappings":"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","file":"static/js/17.7bca4e67.chunk.js","sourcesContent":["const chuyenDoiUrl = (str) => {\r\n    // Chuyển hết sang chữ thường\r\n    str = str.toLowerCase();\r\n\r\n    // xóa dấu\r\n    str = str.replace(/(à|á|ạ|ả|ã|â|ầ|ấ|ậ|ẩ|ẫ|ă|ằ|ắ|ặ|ẳ|ẵ)/g, 'a');\r\n    str = str.replace(/(è|é|ẹ|ẻ|ẽ|ê|ề|ế|ệ|ể|ễ)/g, 'e');\r\n    str = str.replace(/(ì|í|ị|ỉ|ĩ)/g, 'i');\r\n    str = str.replace(/(ò|ó|ọ|ỏ|õ|ô|ồ|ố|ộ|ổ|ỗ|ơ|ờ|ớ|ợ|ở|ỡ)/g, 'o');\r\n    str = str.replace(/(ù|ú|ụ|ủ|ũ|ư|ừ|ứ|ự|ử|ữ)/g, 'u');\r\n    str = str.replace(/(ỳ|ý|ỵ|ỷ|ỹ)/g, 'y');\r\n    str = str.replace(/(đ)/g, 'd');\r\n\r\n    // Xóa ký tự đặc biệt\r\n    str = str.replace(/([^0-9a-z-\\s])/g, '');\r\n\r\n    // Xóa khoảng trắng thay bằng ký tự -\r\n    str = str.replace(/(\\s+)/g, '-');\r\n\r\n    // xóa phần dự - ở đầu\r\n    str = str.replace(/^-+/g, '');\r\n\r\n    // xóa phần dư - ở cuối\r\n    str = str.replace(/-+$/g, '');\r\n\r\n    // return\r\n    return str;\r\n}\r\nexport default chuyenDoiUrl;","import '../../scss/components/Footer.scss'\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer className=\"single_column movie header_large\">\r\n            <nav className='container'>\r\n                <div className=\"join\">\r\n                    <Link to='/' className='pl-0'><img src=\"https://www.themoviedb.org/assets/2/v4/logos/v2/blue_square_2-d537fb228cf3ded904ef09b136fe3fec72548ebc1fea3fbbd1ad9e36364db38b.svg\" alt=\"The Movie Database (TMDb)\" width={130} height={94} /></Link>\r\n                    <Link className=\"rounded\" to=\"/signup\">Join the Community</Link>\r\n                </div>\r\n                <div>\r\n                    <h3>The Basics</h3>\r\n                    <ul>\r\n                        <li><Link to=\"#\">About TMDb</Link></li>\r\n                        <li><Link to=\"#\">Contact Us</Link></li>\r\n                        <li><Link to=\"#\">Support Forums</Link></li>\r\n                        <li><Link to=\"#\">API</Link></li>\r\n                        <li><Link to=\"#\" target=\"_blank\" rel=\"noopener\">System Status</Link></li>\r\n                    </ul>\r\n                </div>\r\n                <div>\r\n                    <h3>Get Involved</h3>\r\n                    <ul>\r\n                        <li><Link to=\"#\">Contribution Bible</Link></li>\r\n                        <li><Link to=\"#\">3rd Party Applications</Link></li>\r\n                        <li><Link to=\"#\">Add New Movie</Link></li>\r\n                        <li><Link to=\"#\">Add New TV Show</Link></li>\r\n                    </ul>\r\n                </div>\r\n                <div>\r\n                    <h3>Community</h3>\r\n                    <ul>\r\n                        <li><Link to=\"#\">Guidelines</Link></li>\r\n                        <li><Link to=\"#\">Discussions</Link></li>\r\n                        <li><Link to=\"#\">Leaderboard</Link></li>\r\n                        <li><Link to=\"\" target=\"_blank\" rel=\"noopener\">Twitter</Link></li>\r\n                    </ul>\r\n                </div>\r\n                <div>\r\n                    <h3>Legal</h3>\r\n                    <ul>\r\n                        <li><Link to=\"#\">Terms of Use</Link></li>\r\n                        <li><Link to=\"#\">API Terms of Use</Link></li>\r\n                        <li><Link to=\"#\">Privacy Policy</Link></li>\r\n                    </ul>\r\n                </div>\r\n            </nav>\r\n            <section>Build 68f56ea (685)</section>\r\n        </footer>\r\n    );\r\n};\r\n\r\nexport default Footer;","import '../../scss/components/Loading/DoubleRing.scss';\r\nconst DoubleRing = () => {\r\n    const style = {\r\n        position: 'absolute',\r\n        top: '50%',\r\n        left: '50%',\r\n        transform: 'translate(-50%,-50%)'\r\n    }\r\n    return (\r\n        <div className=\"la-ball-clip-rotate-multiple la-dark la-2x\" style={style}>\r\n            <div />\r\n            <div />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DoubleRing;","import { Doughnut } from \"react-chartjs-2\";\r\nimport { fade, makeStyles, Typography } from \"@material-ui/core\";\r\nimport { grey } from \"@material-ui/core/colors\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  customDoughnut: (props) => ({\r\n    position: \"relative\",\r\n    borderRadius: \"50%\",\r\n    backgroundColor: \"#081C22\",\r\n    padding: props.size2 ? props.size2 : 4,\r\n    color: 'white',\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  }),\r\n  absoluteCenter: (props) => ({\r\n    position: \"absolute\",\r\n    marginLeft: 2,\r\n    \"& > h6\": {\r\n      fontSize: props.size / 3,\r\n      fontWeight: 'bold',\r\n      \"& > span\": {\r\n        fontSize: props.size / 7,\r\n        verticalAlign: \"text-top\",\r\n      },\r\n    },\r\n  }),\r\n}));\r\n\r\nconst CustomDoughnut = ({ vote_average = 0, size, size2, rounded, offAnimation }) => {\r\n  const classes = useStyles({ size, size2 });\r\n  const data = {\r\n    datasets: [\r\n      {\r\n        data: [vote_average, 10 - vote_average],\r\n        backgroundColor: [\r\n          vote_average >= 7\r\n            ? \"#21D07A\"\r\n            : vote_average >= 4\r\n              ? \"#D2D531\"\r\n              : grey[500],\r\n          vote_average >= 7\r\n            ? \"#204529\"\r\n            : vote_average >= 4\r\n              ? \"#423D0F\"\r\n              : fade(grey[500], 0.5),\r\n        ],\r\n        pointHoverRadius: 5,\r\n        borderWidth: 0,\r\n      },\r\n    ],\r\n  };\r\n\r\n  // round corners doughnut\r\n  // Chart.pluginService.register({\r\n  //   afterUpdate: function (chart) {\r\n  //     if (chart.config.options.elements.arc.roundedCornersFor !== undefined) {\r\n  //       var arc = chart.getDatasetMeta(0).data[chart.config.options.elements.arc.roundedCornersFor];\r\n  //       arc.round = {\r\n  //         x: (chart.chartArea.left + chart.chartArea.right) / 2,\r\n  //         y: (chart.chartArea.top + chart.chartArea.bottom) / 2,\r\n  //         radius: (chart.outerRadius + chart.innerRadius) / 2,\r\n  //         thickness: (chart.outerRadius - chart.innerRadius) / 2 - 1,\r\n  //         backgroundColor: arc._model.backgroundColor\r\n  //       }\r\n  //     }\r\n  //   },\r\n  //   afterDraw: function (chart) {\r\n  //     if (chart.config.options.elements.arc.roundedCornersFor !== undefined) {\r\n  //       var ctx = chart.chart.ctx;\r\n  //       var arc = chart.getDatasetMeta(0).data[chart.config.options.elements.arc.roundedCornersFor];\r\n  //       var startAngle = Math.PI / 2 - arc._view.startAngle;\r\n  //       var endAngle = Math.PI / 2 - arc._view.endAngle;\r\n\r\n  //       ctx.save();\r\n  //       ctx.translate(arc.round.x, arc.round.y);\r\n  //       console.log(arc.round.startAngle)\r\n  //       ctx.fillStyle = arc.round.backgroundColor;\r\n  //       ctx.beginPath();\r\n  //       ctx.arc(arc.round.radius * Math.sin(startAngle), arc.round.radius * Math.cos(startAngle), arc.round.thickness, 0, 2 * Math.PI);\r\n  //       ctx.arc(arc.round.radius * Math.sin(endAngle), arc.round.radius * Math.cos(endAngle), arc.round.thickness, 0, 2 * Math.PI);\r\n  //       ctx.closePath();\r\n  //       ctx.fill();\r\n  //       ctx.restore();\r\n  //     }\r\n  //   },\r\n  // });\r\n  // ! round corners doughnut\r\n\r\n\r\n  return (\r\n    <div className={classes.customDoughnut}>\r\n      <Doughnut\r\n        data={data}\r\n        width={size}\r\n        height={size}\r\n        options={{\r\n          responsive: true,\r\n          maintainAspectRatio: false,\r\n          cutoutPercentage: 87,\r\n          animation: offAnimation ? {\r\n            duration: 0\r\n          } : {}\r\n          ,\r\n          tooltips: {\r\n            enabled: false,\r\n          },\r\n          hover: {\r\n            mode: null,\r\n          },\r\n          legend: {\r\n            display: false,\r\n          },\r\n          elements: rounded ? {\r\n            arc: {\r\n              // roundedCornersFor: 0,  //nó bị vòng lặp => chạy 1 lúc là lag vãi lồn\r\n            }\r\n          } : {}\r\n        }}\r\n      />\r\n      <div className={classes.absoluteCenter}>\r\n        <Typography variant=\"subtitle2\">\r\n          {Math.round(vote_average * 10)}\r\n          <span>%</span>\r\n        </Typography>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CustomDoughnut;\r\n","import moment from 'moment';\r\nconst handleDate = (date) => {\r\n    let dt = moment(date, \"YYYY-MM-DD\");\r\n    return dt.format('LL');\r\n}\r\n\r\nexport default handleDate;","import chuyenDoiUrl from '../../helpers/urlSlug';\r\nimport { Link } from 'react-router-dom';\r\nimport handleDate from '../../helpers/handleDate'\r\n\r\nconst MovieCard = ({ value }) => {\r\n    return (\r\n        <div className='movie'>\r\n            <Link to={'/movie/' + value.id + '-' + chuyenDoiUrl(value.title)}><img src={value.poster_path} alt=\"\" /></Link>\r\n            <div className='root'>\r\n                <div>\r\n                    <Link to={'/movie/' + value.id + '-' + chuyenDoiUrl(value.title)} > <h6 className='title'>{value.title}</h6></Link>\r\n                    <p className='date'>{value.release_date && handleDate(value.release_date)}</p>\r\n                </div>\r\n                <p className='overview'>{value.overview}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MovieCard;","/*! Fast Average Color | © 2020 Denis Seleznev | MIT License | https://github.com/fast-average-color/fast-average-color */\nfunction toHex(num) {\n    const str = num.toString(16);\n\n    return str.length === 1 ? '0' + str : str;\n}\n\nfunction arrayToHex(arr) {\n    return '#' + arr.map(toHex).join('');\n}\n\nfunction isDark(color) {\n    // http://www.w3.org/TR/AERT#color-contrast\n    const result = (color[0] * 299 + color[1] * 587 + color[2] * 114) / 1000;\n\n    return result < 128;\n}\n\nfunction prepareIgnoredColor(color) {\n    if (!color) { return color; }\n\n    if (Array.isArray(color)) {\n        return typeof color[0] === 'number' ? [color.slice()] : color;\n    }\n\n    return [color];\n}\n\nfunction isIgnoredColor(data, index, ignoredColor) {\n    for (let i = 0; i < ignoredColor.length; i++) {\n        if (isIgnoredColorAsNumbers(data, index, ignoredColor[i])) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nfunction isIgnoredColorAsNumbers(data, index, ignoredColor) {\n    switch (ignoredColor.length) {\n        case 3:\n            // [red, green, blue]\n            if (isIgnoredRGBColor(data, index, ignoredColor)) {\n                return true;\n            }\n\n            break;\n        case 4:\n            // [red, green, blue, alpha]\n            if (isIgnoredRGBAColor(data, index, ignoredColor)) {\n                return true;\n            }\n\n            break;\n        case 5:\n            // [red, green, blue, alpha, threshold]\n            if (isIgnoredRGBAColorWithThreshold(data, index, ignoredColor)) {\n                return true;\n            }\n\n            break;\n        default:\n            return false;\n    }\n}\n\nfunction isIgnoredRGBColor(data, index, ignoredColor) {\n    // Ignore if the pixel are transparent.\n    if (data[index + 3] !== 255) {\n        return true;\n    }\n\n    if (data[index] === ignoredColor[0] &&\n        data[index + 1] === ignoredColor[1] &&\n        data[index + 2] === ignoredColor[2]\n    ) {\n        return true;\n    }\n\n    return false;\n}\n\nfunction isIgnoredRGBAColor(data, index, ignoredColor) {\n    if (data[index + 3] && ignoredColor[3]) {\n        return data[index] === ignoredColor[0] &&\n            data[index + 1] === ignoredColor[1] &&\n            data[index + 2] === ignoredColor[2] &&\n            data[index + 3] === ignoredColor[3];\n    }\n\n    // Ignore rgb components if the pixel are fully transparent.\n    return data[index + 3] === ignoredColor[3];\n}\n\nfunction inRange(colorComponent, ignoredColorComponent, value) {\n    return colorComponent >= (ignoredColorComponent - value) &&\n        colorComponent <= (ignoredColorComponent + value);\n}\n\nfunction isIgnoredRGBAColorWithThreshold(data, index, ignoredColor) {\n    const redIgnored = ignoredColor[0];\n    const greenIgnored = ignoredColor[1];\n    const blueIgnored = ignoredColor[2];\n    const alphaIgnored = ignoredColor[3];\n    const threshold = ignoredColor[4];\n    const alphaData = data[index + 3];\n\n    const alphaInRange = inRange(alphaData, alphaIgnored, threshold);\n    if (!alphaIgnored) {\n        return alphaInRange;\n    }\n\n    if (!alphaData && alphaInRange) {\n        return true;\n    }\n\n    if (inRange(data[index], redIgnored, threshold) &&\n        inRange(data[index + 1], greenIgnored, threshold) &&\n        inRange(data[index + 2], blueIgnored, threshold) &&\n        alphaInRange\n    ) {\n        return true;\n    }\n\n    return false;\n}\n\nfunction dominantAlgorithm(arr, len, options) {\n    const colorHash = {};\n    const divider = 24;\n    const ignoredColor = options.ignoredColor;\n    const step = options.step;\n\n    for (let i = 0; i < len; i += step) {\n        const red = arr[i];\n        const green = arr[i + 1];\n        const blue = arr[i + 2];\n        const alpha = arr[i + 3];\n\n        if (ignoredColor && isIgnoredColor(arr, i, ignoredColor)) {\n            continue;\n        }\n\n        const key = Math.round(red / divider) + ',' +\n                Math.round(green / divider) + ',' +\n                Math.round(blue / divider);\n\n        if (colorHash[key]) {\n            colorHash[key] = [\n                colorHash[key][0] + red * alpha,\n                colorHash[key][1] + green * alpha,\n                colorHash[key][2] + blue * alpha,\n                colorHash[key][3] + alpha,\n                colorHash[key][4] + 1\n            ];\n        } else {\n            colorHash[key] = [red * alpha, green * alpha, blue * alpha, alpha, 1];\n        }\n    }\n\n    const buffer = Object.keys(colorHash)\n        .map(key => colorHash[key])\n        .sort((a, b) => {\n            const countA = a[4];\n            const countB = b[4];\n\n            return countA > countB ?  -1 : countA === countB ? 0 : 1;\n        });\n\n    const max = buffer[0];\n\n    const redTotal = max[0];\n    const greenTotal = max[1];\n    const blueTotal = max[2];\n\n    const alphaTotal = max[3];\n    const count = max[4];\n\n    return alphaTotal ? [\n        Math.round(redTotal / alphaTotal),\n        Math.round(greenTotal / alphaTotal),\n        Math.round(blueTotal / alphaTotal),\n        Math.round(alphaTotal / count)\n    ] : options.defaultColor;\n}\n\nfunction simpleAlgorithm(arr, len, options) {\n    let redTotal = 0;\n    let greenTotal = 0;\n    let blueTotal = 0;\n    let alphaTotal = 0;\n    let count = 0;\n\n    const ignoredColor = options.ignoredColor;\n    const step = options.step;\n\n    for (let i = 0; i < len; i += step) {\n        const alpha = arr[i + 3];\n        const red = arr[i] * alpha;\n        const green = arr[i + 1] * alpha;\n        const blue = arr[i + 2] * alpha;\n\n        if (ignoredColor && isIgnoredColor(arr, i, ignoredColor)) {\n            continue;\n        }\n\n        redTotal += red;\n        greenTotal += green;\n        blueTotal += blue;\n        alphaTotal += alpha;\n\n        count++;\n    }\n\n    return alphaTotal ? [\n        Math.round(redTotal / alphaTotal),\n        Math.round(greenTotal / alphaTotal),\n        Math.round(blueTotal / alphaTotal),\n        Math.round(alphaTotal / count)\n    ] : options.defaultColor;\n}\n\nfunction sqrtAlgorithm(arr, len, options) {\n    let redTotal = 0;\n    let greenTotal = 0;\n    let blueTotal = 0;\n    let alphaTotal = 0;\n    let count = 0;\n\n    const ignoredColor = options.ignoredColor;\n    const step = options.step;\n\n    for (let i = 0; i < len; i += step) {\n        const red = arr[i];\n        const green = arr[i + 1];\n        const blue = arr[i + 2];\n        const alpha = arr[i + 3];\n\n        if (ignoredColor && isIgnoredColor(arr, i, ignoredColor)) {\n            continue;\n        }\n\n        redTotal += red * red * alpha;\n        greenTotal += green * green * alpha;\n        blueTotal += blue * blue * alpha;\n        alphaTotal += alpha;\n\n        count++;\n    }\n\n    return alphaTotal ? [\n        Math.round(Math.sqrt(redTotal / alphaTotal)),\n        Math.round(Math.sqrt(greenTotal / alphaTotal)),\n        Math.round(Math.sqrt(blueTotal / alphaTotal)),\n        Math.round(alphaTotal / count)\n    ] : options.defaultColor;\n}\n\nfunction getDefaultColor(options) {\n    return getOption(options, 'defaultColor', [0, 0, 0, 0]);\n}\n\nfunction getOption(options, name, defaultValue) {\n    return typeof options[name] === 'undefined' ? defaultValue : options[name];\n}\n\nconst MIN_SIZE = 10;\nconst MAX_SIZE = 100;\n\nfunction isSvg(filename) {\n    return filename.search(/\\.svg(\\?|$)/i) !== -1;\n}\n\nfunction getOriginalSize(resource) {\n    if (resource instanceof HTMLImageElement) {\n        let width = resource.naturalWidth;\n        let height = resource.naturalHeight;\n\n        // For SVG images with only viewBox attr.\n        if (!resource.naturalWidth && isSvg(resource.src)) {\n            width = height = MAX_SIZE;\n        }\n\n        return {\n            width,\n            height,\n        };\n    }\n\n    if (resource instanceof HTMLVideoElement) {\n        return {\n            width: resource.videoWidth,\n            height: resource.videoHeight\n        };\n    }\n\n    return {\n        width: resource.width,\n        height: resource.height\n    };\n}\n\nfunction prepareSizeAndPosition(originalSize, options) {\n    const srcLeft = getOption(options, 'left', 0);\n    const srcTop = getOption(options, 'top', 0);\n    const srcWidth = getOption(options, 'width', originalSize.width);\n    const srcHeight = getOption(options, 'height', originalSize.height);\n\n    let destWidth = srcWidth;\n    let destHeight = srcHeight;\n\n    if (options.mode === 'precision') {\n        return {\n            srcLeft,\n            srcTop,\n            srcWidth,\n            srcHeight,\n            destWidth,\n            destHeight\n        };\n    }\n\n    let factor;\n\n    if (srcWidth > srcHeight) {\n        factor = srcWidth / srcHeight;\n        destWidth = MAX_SIZE;\n        destHeight = Math.round(destWidth / factor);\n    } else {\n        factor = srcHeight / srcWidth;\n        destHeight = MAX_SIZE;\n        destWidth = Math.round(destHeight / factor);\n    }\n\n    if (\n        destWidth > srcWidth || destHeight > srcHeight ||\n        destWidth < MIN_SIZE || destHeight < MIN_SIZE\n    ) {\n        destWidth = srcWidth;\n        destHeight = srcHeight;\n    }\n\n    return {\n        srcLeft,\n        srcTop,\n        srcWidth,\n        srcHeight,\n        destWidth,\n        destHeight\n    };\n}\n\nfunction makeCanvas() {\n    return typeof window === 'undefined' ?\n        new OffscreenCanvas(1, 1) :\n        document.createElement('canvas');\n}\n\nconst ERROR_PREFIX = 'FastAverageColor: ';\n\nfunction outputError(options, text, details) {\n    if (!options.silent) {\n        console.error(ERROR_PREFIX + text);\n\n        if (details) {\n            console.error(details);\n        }\n    }\n}\n\nfunction getError(text) {\n    return Error(ERROR_PREFIX + text);\n}\n\nclass FastAverageColor {\n    /**\n     * Get asynchronously the average color from not loaded image.\n     *\n     * @param {string | HTMLImageElement | HTMLVideoElement | HTMLCanvasElement | null} resource\n     * @param {FastAverageColorOptions} [options]\n     *\n     * @returns {Promise<FastAverageColorOptions>}\n     */\n    getColorAsync(resource, options) {\n        if (!resource) {\n            return Promise.reject(getError('call .getColorAsync() without resource.'));\n        }\n\n        if (typeof resource === 'string') {\n            const img = new Image();\n            img.crossOrigin = '';\n            img.src = resource;\n\n            return this._bindImageEvents(img, options);\n        } else if (resource instanceof Image && !resource.complete) {\n            return this._bindImageEvents(resource, options);\n        } else {\n            const result = this.getColor(resource, options);\n\n            return result.error ? Promise.reject(result.error) : Promise.resolve(result);\n        }\n    }\n\n    /**\n     * Get the average color from images, videos and canvas.\n     *\n     * @param {HTMLImageElement | HTMLVideoElement | HTMLCanvasElement | null} resource\n     * @param {FastAverageColorOptions} [options]\n     *\n     * @returns {FastAverageColorResult}\n     */\n    getColor(resource, options) {\n        options = options || {};\n\n        const defaultColor = getDefaultColor(options);\n\n        if (!resource) {\n            outputError(options, 'call .getColor(null) without resource.');\n\n            return this.prepareResult(defaultColor);\n        }\n\n        const originalSize = getOriginalSize(resource);\n        const size = prepareSizeAndPosition(originalSize, options);\n\n        if (!size.srcWidth || !size.srcHeight || !size.destWidth || !size.destHeight) {\n            outputError(options, `incorrect sizes for resource \"${resource.src}\".`);\n\n            return this.prepareResult(defaultColor);\n        }\n\n        if (!this._ctx) {\n            this._canvas = makeCanvas();\n            this._ctx = this._canvas.getContext && this._canvas.getContext('2d');\n\n            if (!this._ctx) {\n                outputError(options, 'Canvas Context 2D is not supported in this browser.');\n\n                return this.prepareResult(defaultColor);\n            }\n        }\n\n        this._canvas.width = size.destWidth;\n        this._canvas.height = size.destHeight;\n\n        let value = defaultColor;\n\n        try {\n            this._ctx.clearRect(0, 0, size.destWidth, size.destHeight);\n            this._ctx.drawImage(\n                resource,\n                size.srcLeft, size.srcTop,\n                size.srcWidth, size.srcHeight,\n                0, 0,\n                size.destWidth, size.destHeight\n            );\n\n            const bitmapData = this._ctx.getImageData(0, 0, size.destWidth, size.destHeight).data;\n            value = this.getColorFromArray4(bitmapData, options);\n        } catch (e) {\n            outputError(options, `security error (CORS) for resource ${resource.src}.\\nDetails: https://developer.mozilla.org/en/docs/Web/HTML/CORS_enabled_image`, e);\n        }\n\n        return this.prepareResult(value);\n    }\n\n    /**\n     * Get the average color from a array when 1 pixel is 4 bytes.\n     *\n     * @param {number[]|Uint8Array|Uint8ClampedArray} arr\n     * @param {Object} [options]\n     * @param {string} [options.algorithm=\"sqrt\"] \"simple\", \"sqrt\" or \"dominant\"\n     * @param {number[]}  [options.defaultColor=[0, 0, 0, 0]] [red, green, blue, alpha]\n     * @param {number[]}  [options.ignoredColor] [red, green, blue, alpha]\n     * @param {number} [options.step=1]\n     *\n     * @returns {number[]} [red (0-255), green (0-255), blue (0-255), alpha (0-255)]\n     */\n    getColorFromArray4(arr, options) {\n        options = options || {};\n\n        const bytesPerPixel = 4;\n        const arrLength = arr.length;\n        const defaultColor = getDefaultColor(options);\n\n        if (arrLength < bytesPerPixel) {\n            return defaultColor;\n        }\n\n        const len = arrLength - arrLength % bytesPerPixel;\n        const step = (options.step || 1) * bytesPerPixel;\n\n        let algorithm;\n\n        switch (options.algorithm || 'sqrt') {\n            case 'simple':\n                algorithm = simpleAlgorithm;\n                break;\n            case 'sqrt':\n                algorithm = sqrtAlgorithm;\n                break;\n            case 'dominant':\n                algorithm = dominantAlgorithm;\n                break;\n            default:\n                throw getError(`${options.algorithm} is unknown algorithm.`);\n        }\n\n        return algorithm(arr, len, {\n            defaultColor,\n            ignoredColor: prepareIgnoredColor(options.ignoredColor),\n            step\n        });\n    }\n\n    /**\n     * Get color data from value ([r, g, b, a]).\n     *\n     * @param {number[]} value\n     *\n     * @returns {FastAverageColorResult}\n     */\n    prepareResult(value) {\n        const rgb = value.slice(0, 3);\n        const rgba = [].concat(rgb, value[3] / 255);\n        const isDarkColor = isDark(value);\n\n        return {\n            value,\n            rgb: 'rgb(' + rgb.join(',') + ')',\n            rgba: 'rgba(' + rgba.join(',') + ')',\n            hex: arrayToHex(rgb),\n            hexa: arrayToHex(value),\n            isDark: isDarkColor,\n            isLight: !isDarkColor\n        };\n    }\n\n    /**\n     * Destroy the instance.\n     */\n    destroy() {\n        delete this._canvas;\n        delete this._ctx;\n    }\n\n    _bindImageEvents(resource, options) {\n        return new Promise((resolve, reject) => {\n            const onload = () => {\n                unbindEvents();\n\n                const result = this.getColor(resource, options);\n\n                if (result.error) {\n                    reject(result.error);\n                } else {\n                    resolve(result);\n                }\n            };\n\n            const onerror = () => {\n                unbindEvents();\n\n                reject(getError(`Error loading image \"${resource.src}\".`));\n            };\n\n            const onabort = () => {\n                unbindEvents();\n\n                reject(getError(`Image \"${resource.src}\" loading aborted.`));\n            };\n\n            const unbindEvents = () => {\n                resource.removeEventListener('load', onload);\n                resource.removeEventListener('error', onerror);\n                resource.removeEventListener('abort', onabort);\n            };\n\n            resource.addEventListener('load', onload);\n            resource.addEventListener('error', onerror);\n            resource.addEventListener('abort', onabort);\n        });\n    }\n}\n\n/**\n * @typeof {Object} FastAverageColorOptions\n *\n * @param {number[]}  [options.defaultColor=[0, 0, 0, 0]] [red, green, blue, alpha]\n * @param {number[]}  [options.ignoredColor] [red, green, blue, alpha]\n * @param {string} [options.mode=\"speed\"] \"precision\" or \"speed\"\n * @param {string} [options.algorithm=\"sqrt\"] \"simple\", \"sqrt\" or \"dominant\"\n * @param {number} [options.step=1]\n * @param {number} [options.left=0]\n * @param {number} [options.top=0]\n * @param {number} [options.width=width of resource]\n * @param {number} [options.height=height of resource]\n * @param {boolean} [options.silent] Disable error output via console.error\n */\n\n/**\n * @typedef {Object} FastAverageColorResult\n *\n * @property {string} rgba\n * @property {string} rgb\n * @property {string} hex\n * @property {string} hexa\n * @property {number[]} value\n * @property {boolean} isDark\n * @property {boolean} isLight\n * @property {Error?} error\n */\n\nexport default FastAverageColor;\n","import axios from \"axios\";\r\nimport { API_KEY, API_URL, IMAGE_URL, POSTER_SIZE, BACKDROP_SIZE } from './Config';\r\nimport { no_image } from '../assets';\r\nimport { no_poster } from '../assets';\r\nexport const fetchCollection = async (id) => {\r\n    try {\r\n        const { data } = await axios.get(`${API_URL}collection/${id}`, {\r\n            params: {\r\n                api_key: API_KEY\r\n            },\r\n        });\r\n        const checkData = {\r\n            ...data,\r\n            poster_path: data.poster_path ? IMAGE_URL + POSTER_SIZE + data.poster_path : no_poster,\r\n            backdrop_path: data.backdrop_path ? IMAGE_URL + BACKDROP_SIZE + data.backdrop_path : no_image,\r\n            parts: data.parts.map((item) => ({\r\n                ...item,\r\n                poster_path: item.poster_path ? IMAGE_URL + 'w220_and_h330_face' + item.poster_path : no_poster\r\n            })),\r\n            vote_average: data.parts.reduce(\r\n                (acc, cur) => acc + cur.vote_average / data.parts.length,\r\n                0\r\n            ),\r\n        }\r\n        return checkData;\r\n    } catch (e) {\r\n        console.log(e);\r\n    }\r\n\r\n}","import {\r\n    makeStyles,\r\n    Grid\r\n} from \"@material-ui/core\";\r\nimport '../../scss/components/Movie_page.scss';\r\nimport { useMediaQuery } from 'react-responsive'\r\nimport CustomDoughnut from \"../Doughnut/CustomDoughnut\";\r\nimport { no_image } from '../../assets';\r\nconst useStyles = makeStyles((theme) => ({\r\n    styledDoughnut: {\r\n        paddingRight: \"0 !important\",\r\n    },\r\n}));\r\nconst HeaderCollection = ({ collection, data, data2 }) => {\r\n    const classes = useStyles();\r\n    const isMobileDevice = useMediaQuery({\r\n        query: '(max-device-width: 991.98px)'\r\n    })\r\n    const backdrop = collection.backdrop_path === no_image ? null : collection.backdrop_path\r\n    return (\r\n        <div className='main py-xl-4 pt-3 pb-lg-4' style={{ backgroundImage: !isMobileDevice ? `linear-gradient(to right, rgba(${data},1.00) 150px,rgba(${data},0.80) 100%),url(${backdrop})` : `linear-gradient( rgba(${data},1.00) 0px, rgba(${data},0.80) 100%),url(${backdrop})` }}>\r\n            <div className=\"container py-md-1 py-0 inBackDrop my-auto\" style={{ minHeight: '0vh' }}>\r\n                <div className=\"row collection\">\r\n                    <div className=\"col-md-12 col-lg-4 col-xl-3 col-12\">\r\n                        {\r\n                            (<img src={collection.poster_path} alt=\"\" loading='eager' />)\r\n                        }\r\n                    </div>\r\n                    <div className=\"col-md pl-xl-4 pl-0 mt-xl-0 mt-2\" style={{ color: data2 }}>\r\n                        <h3 style={{ marginBottom: '10px' }}>{collection.name}</h3>\r\n                        {/* {\r\n                            !isMobileDevice ? (<p className='center'>{certification != '' && <span style={{ border: '1px solid', padding: '0.06em 4px 0.06em 8px', borderRadius: '2px', marginRight: '8px', opacity: '0.7' }}>{certification}  </span>}{handleDate(movie.release_date)}&nbsp; {movie.iso_3166_1 !== '' && <span>({movie.iso_3166_1})</span>}&nbsp; •&nbsp; {genres(movie.genres)}&nbsp; • &nbsp;{timeConvert(movie.runtime)} </p>)\r\n                                :\r\n                                (<><p className='center m-0'>{certification != '' && <span style={{ border: '1px solid', padding: '0.06em 4px 0.06em 8px', borderRadius: '2px', marginRight: '8px', opacity: '0.7' }}>{certification}  </span>}{handleDate(movie.release_date)}&nbsp; {movie.iso_3166_1 !== '' && <span>({movie.iso_3166_1})</span>}&nbsp; •&nbsp;&nbsp;{timeConvert(movie.runtime)}</p>\r\n                                    <p className='center'>{genres(movie.genres)}</p></>)\r\n                        } */}\r\n                        <div className='doughnut'>\r\n                            <Grid item className={classes.styledDoughnut}>\r\n                                <CustomDoughnut offAnimation={isMobileDevice ? true : false} rounded={true} vote_average={collection.vote_average} size={60} />\r\n                            </Grid>\r\n                            <h5 style={{ fontWeight: '700' }}>User<br></br> Score</h5>\r\n                        </div>\r\n                        <div className='overview'>\r\n                            <h4>Overview</h4>\r\n                            {\r\n                                <p className='pOverview'>{collection.overview ? collection.overview : \"We don't have an overview translated in English.\"}</p>\r\n                            }\r\n                        </div>\r\n                        <div>\r\n                            <h6>Number of Movies: {collection.parts.length}</h6>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default HeaderCollection;","import MovieCard from '../KeywordPage/MovieCard';\r\n\r\nconst ListMovie = ({ movie }) => {\r\n    return movie.map((item, index) => (\r\n        <MovieCard value={item} key={index}/>\r\n    ))\r\n};\r\n\r\nexport default ListMovie;","import { useEffect, useState } from 'react';\r\nimport '../../css/Main.scss';\r\nimport { fetchCollection } from './../../api/fetchCollection';\r\nimport FastAverageColor from 'fast-average-color';\r\nimport DoubleRing from '../Loading/DoubleRing';\r\nimport HeaderCollection from './HeaderCollection';\r\nimport ListMovie from './ListMovie';\r\nimport Footer from './../Footer/Footer'\r\nconst Index = ({ props }) => {\r\n    const [imgsLoaded, setImgsLoaded] = useState(false);\r\n    const id = props.match.params.id;\r\n    const [data, setData] = useState(null);\r\n    const [dt, setDt] = useState(null); //background color\r\n    const [dt2, setDt2] = useState(null);//text color\r\n    const hexToRgb = hex =>\r\n        hex.replace(/^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i\r\n            , (m, r, g, b) => '#' + r + r + g + g + b + b)\r\n            .substring(1).match(/.{2}/g)\r\n            .map(x => parseInt(x, 16))\r\n    useEffect(() => {\r\n        const fetch = async () => {\r\n            await fetchCollection(id).then((res) => {\r\n                setData(res);\r\n                //preload poster image\r\n                const hihi = new Image();\r\n                const haha = new Image();\r\n                hihi.src = res.poster_path;     // by setting an src, you trigger browser download \r\n                hihi.onload = () => {\r\n                    // when it finishes loading\r\n                    const fac = new FastAverageColor();\r\n                    fac.getColorAsync(hihi.src, { algorithm: 'dominant' })\r\n                        .then(color => {\r\n                            // console.log(color);\r\n                            // let contrast = getContrastYIQ(color.hex.slice(1, 7));\r\n                            let contrast = color.isLight ? 'black' : 'white'\r\n                            setDt(hexToRgb(color.hex));\r\n                            setDt2(contrast);\r\n                            //positive for lighten, negative for darken\r\n                        })\r\n                        .catch(e => {\r\n                            console.log(e);\r\n                        });\r\n                    haha.src = res.backdrop_path;\r\n                }\r\n                haha.onload = () => { //source ảnh ko lỗi thì vào đây\r\n                    setImgsLoaded(true);\r\n                }\r\n                haha.onerror = () => { //source ảnh bị lỗi 404 thì vào đây\r\n                    setImgsLoaded(true)\r\n                }\r\n            });\r\n        }\r\n        fetch();\r\n    }, [id])\r\n    return imgsLoaded ?\r\n        <div id='main'>\r\n            <HeaderCollection collection={data} data={dt} data2={dt2} />\r\n            <div className='container'>\r\n                <h3 style={{ marginBottom: '20px', fontWeight: '700', fontSize: '22.4px' }}>{data.parts.length} movies</h3>\r\n                <div className=\"movie_list\">\r\n                    <ListMovie movie={data.parts} />\r\n                </div>\r\n            </div>\r\n            <Footer />\r\n        </div> : <DoubleRing />\r\n};\r\n\r\nexport default Index;","import CollectionPage from '../components/CollectionPage';\r\nconst Collection = (props) => {\r\n    return (\r\n        <CollectionPage props={props} />\r\n    );\r\n};\r\nexport default Collection"],"sourceRoot":""}