{"version":3,"sources":["helpers/urlSlug.js","components/Footer/Footer.js","components/Doughnut/CustomDoughnut.js","helpers/handleDate.js","components/KeywordPage/MovieCard.js","../node_modules/fast-average-color/dist/index.esm.js","api/fetchCollection.js","components/CollectionPage/HeaderCollection.js","components/CollectionPage/ListMovie.js","components/CollectionPage/index.js","pages/Collection.js"],"names":["chuyenDoiUrl","str","test","toLowerCase","replace","Footer","useSelector","state","user","isAuth","className","to","src","alt","width","height","style","textTransform","username","target","rel","useStyles","makeStyles","theme","customDoughnut","props","position","borderRadius","backgroundColor","padding","size2","color","display","justifyContent","alignItems","absoluteCenter","marginLeft","fontSize","size","fontWeight","verticalAlign","CustomDoughnut","vote_average","rounded","offAnimation","classes","data","datasets","grey","fade","pointHoverRadius","borderWidth","options","responsive","maintainAspectRatio","cutoutPercentage","animation","duration","tooltips","enabled","hover","mode","legend","elements","arc","Math","round","memo","handleDate","date","moment","format","MovieCard","value","document","getElementsByTagName","getAttribute","border","id","title","poster_path","release_date","overview","toHex","num","toString","length","arrayToHex","arr","map","join","isIgnoredColor","index","ignoredColor","i","isIgnoredColorAsNumbers","isIgnoredRGBColor","isIgnoredRGBAColor","redIgnored","greenIgnored","blueIgnored","alphaIgnored","threshold","alphaData","alphaInRange","inRange","isIgnoredRGBAColorWithThreshold","colorComponent","ignoredColorComponent","dominantAlgorithm","len","colorHash","step","red","green","blue","alpha","key","max","Object","keys","sort","a","b","countA","countB","redTotal","greenTotal","blueTotal","alphaTotal","count","defaultColor","simpleAlgorithm","sqrtAlgorithm","sqrt","getDefaultColor","getOption","name","defaultValue","ERROR_PREFIX","outputError","text","details","silent","console","error","getError","Error","FastAverageColor","resource","Promise","reject","img","Image","crossOrigin","this","_bindImageEvents","complete","result","getColor","resolve","prepareResult","originalSize","factor","srcLeft","srcTop","srcWidth","srcHeight","destWidth","destHeight","prepareSizeAndPosition","HTMLImageElement","naturalWidth","naturalHeight","search","HTMLVideoElement","videoWidth","videoHeight","getOriginalSize","_ctx","_canvas","window","OffscreenCanvas","createElement","getContext","clearRect","drawImage","bitmapData","getImageData","getColorFromArray4","e","arrLength","algorithm","Array","isArray","slice","rgb","rgba","concat","isDarkColor","hex","hexa","isDark","isLight","onload","unbindEvents","onerror","onabort","removeEventListener","addEventListener","fetchCollection","API","get","API_URL","params","api_key","API_KEY","checkData","IMAGE_URL","POSTER_SIZE","no_poster","backdrop_path","BACKDROP_SIZE","no_image","parts","item","reduce","acc","cur","log","styledDoughnut","paddingRight","HeaderCollection","collection","data2","isMobileDevice","useMediaQuery","query","backdrop","backgroundImage","minHeight","loading","marginBottom","Grid","ListMovie","movie","Index","useState","imgsLoaded","setImgsLoaded","match","setData","dt","setDt","dt2","setDt2","useEffect","then","res","hihi","haha","getColorAsync","contrast","m","r","g","substring","x","parseInt","catch","fetch","Loader","Collection","CollectionPage"],"mappings":"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","file":"static/js/16.05e4d1a9.chunk.js","sourcesContent":["const chuyenDoiUrl = (str) => {\n  let english = /[\\u3400-\\u9FBF]/.test(str); // -> true => chinese, japanese language\n  if (!english) {\n    // Chuyển hết sang chữ thường\n    str = str.toLowerCase();\n    // xóa dấu\n    str = str.replace(/(à|á|ạ|ả|ã|â|ầ|ấ|ậ|ẩ|ẫ|ă|ằ|ắ|ặ|ẳ|ẵ)/g, \"a\");\n    str = str.replace(/(è|é|ẹ|ẻ|ẽ|ê|ề|ế|ệ|ể|ễ)/g, \"e\");\n    str = str.replace(/(ì|í|ị|ỉ|ĩ)/g, \"i\");\n    str = str.replace(/(ò|ó|ọ|ỏ|õ|ô|ồ|ố|ộ|ổ|ỗ|ơ|ờ|ớ|ợ|ở|ỡ)/g, \"o\");\n    str = str.replace(/(ù|ú|ụ|ủ|ũ|ư|ừ|ứ|ự|ử|ữ)/g, \"u\");\n    str = str.replace(/(ỳ|ý|ỵ|ỷ|ỹ)/g, \"y\");\n    str = str.replace(/(đ)/g, \"d\");\n    // Xóa ký tự đặc biệt\n    str = str.replace(/([^0-9a-z-\\s])/g, \"\");\n    // Xóa khoảng trắng thay bằng ký tự -\n    str = str.replace(/(\\s+)/g, \"-\");\n    // xóa phần dự - ở đầu\n    str = str.replace(/^-+/g, \"\");\n    // xóa phần dư - ở cuối\n    str = str.replace(/-+$/g, \"\");\n    // return\n    return str;\n  } else {\n    return \"undefined\";\n  }\n};\nexport default chuyenDoiUrl;\n","import \"../../scss/components/Footer.scss\";\nimport { Link } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\n\nconst Footer = () => {\n  const { isAuth, user } = useSelector((state) => state.user);\n  return (\n    <footer className=\"single_column movie header_large\">\n      <nav className=\"container\">\n        <div className=\"join\">\n          <Link to=\"/\" className=\"pl-0\">\n            <img\n              src=\"https://www.themoviedb.org/assets/2/v4/logos/v2/blue_square_2-d537fb228cf3ded904ef09b136fe3fec72548ebc1fea3fbbd1ad9e36364db38b.svg\"\n              alt=\"The Movie Database (TMDb)\"\n              width={130}\n              height={94}\n            />\n          </Link>\n          <Link className=\"rounded\" to=\"/signup\">\n            {isAuth ? (\n              <span>\n                h\n                <span style={{ textTransform: \"lowercase\" }}>\n                  {\"i \" + user.user.username}\n                </span>\n              </span>\n            ) : (\n              \"Join the Community\"\n            )}\n          </Link>\n        </div>\n        <div>\n          <h3>The Basics</h3>\n          <ul>\n            <li>\n              <Link to=\"#\">About TMDb</Link>\n            </li>\n            <li>\n              <Link to=\"#\">Contact Us</Link>\n            </li>\n            <li>\n              <Link to=\"#\">Support Forums</Link>\n            </li>\n            <li>\n              <Link to=\"#\">API</Link>\n            </li>\n            <li>\n              <Link to=\"#\" target=\"_blank\" rel=\"noopener\">\n                System Status\n              </Link>\n            </li>\n          </ul>\n        </div>\n        <div>\n          <h3>Get Involved</h3>\n          <ul>\n            <li>\n              <Link to=\"#\">Contribution Bible</Link>\n            </li>\n            <li>\n              <Link to=\"#\">3rd Party Applications</Link>\n            </li>\n            <li>\n              <Link to=\"#\">Add New Movie</Link>\n            </li>\n            <li>\n              <Link to=\"#\">Add New TV Show</Link>\n            </li>\n          </ul>\n        </div>\n        <div>\n          <h3>Community</h3>\n          <ul>\n            <li>\n              <Link to=\"#\">Guidelines</Link>\n            </li>\n            <li>\n              <Link to=\"#\">Discussions</Link>\n            </li>\n            <li>\n              <Link to=\"#\">Leaderboard</Link>\n            </li>\n            <li>\n              <Link to=\"\" target=\"_blank\" rel=\"noopener\">\n                Twitter\n              </Link>\n            </li>\n          </ul>\n        </div>\n        <div>\n          <h3>Legal</h3>\n          <ul>\n            <li>\n              <Link to=\"#\">Terms of Use</Link>\n            </li>\n            <li>\n              <Link to=\"#\">API Terms of Use</Link>\n            </li>\n            <li>\n              <Link to=\"#\">Privacy Policy</Link>\n            </li>\n          </ul>\n        </div>\n      </nav>\n      <section>Build 68f56ea (685)</section>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import { Doughnut } from \"react-chartjs-2\";\nimport { fade, makeStyles, Typography } from \"@material-ui/core\";\nimport { grey } from \"@material-ui/core/colors\";\nimport { memo } from \"react\";\n\nconst useStyles = makeStyles((theme) => ({\n  customDoughnut: (props) => ({\n    position: \"relative\",\n    borderRadius: \"50%\",\n    backgroundColor: \"#081C22\",\n    padding: props.size2 ? props.size2 : 4,\n    color: \"white\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  }),\n  absoluteCenter: (props) => ({\n    position: \"absolute\",\n    marginLeft: 2,\n    \"& > h6\": {\n      fontSize: props.size / 3,\n      fontWeight: \"bold\",\n      \"& > span\": {\n        fontSize: props.size / 7,\n        verticalAlign: \"text-top\",\n      },\n    },\n  }),\n}));\n\nconst CustomDoughnut = ({\n  vote_average = \"\",\n  size,\n  size2,\n  rounded,\n  offAnimation,\n  fontSize,\n}) => {\n  const classes = useStyles({ size, size2 });\n  const data = {\n    datasets: vote_average !== \"\" && [\n      {\n        data: [vote_average, 10 - vote_average],\n        backgroundColor: [\n          vote_average >= 7\n            ? \"#21D07A\"\n            : vote_average >= 4\n            ? \"#D2D531\"\n            : grey[500],\n          vote_average >= 7\n            ? \"#204529\"\n            : vote_average >= 4\n            ? \"#423D0F\"\n            : fade(grey[500], 0.5),\n        ],\n        pointHoverRadius: 5,\n        borderWidth: 0,\n      },\n    ],\n  };\n\n  // round corners doughnut\n  // useMemo(() => {\n  //   Chart.pluginService.register({\n  //     afterUpdate: function (chart) {\n  //       if (chart.config.options.elements.arc.roundedCornersFor !== undefined) {\n  //         var arc = chart.getDatasetMeta(0).data[chart.config.options.elements.arc.roundedCornersFor];\n  //         arc.round = {\n  //           x: (chart.chartArea.left + chart.chartArea.right) / 2,\n  //           y: (chart.chartArea.top + chart.chartArea.bottom) / 2,\n  //           radius: (chart.outerRadius + chart.innerRadius) / 2,\n  //           thickness: (chart.outerRadius - chart.innerRadius) / 2 - 1,\n  //           backgroundColor: arc._model.backgroundColor\n  //         }\n  //       }\n  //     },\n  //     afterDraw: function (chart) {\n  //       if (chart.config.options.elements.arc.roundedCornersFor !== undefined) {\n  //         var ctx = chart.chart.ctx;\n  //         var arc = chart.getDatasetMeta(0).data[chart.config.options.elements.arc.roundedCornersFor];\n  //         var startAngle = Math.PI / 2 - arc._view.startAngle;\n  //         var endAngle = Math.PI / 2 - arc._view.endAngle;\n\n  //         ctx.save();\n  //         ctx.translate(arc.round.x, arc.round.y);\n  //         console.log(arc.round.startAngle)\n  //         ctx.fillStyle = arc.round.backgroundColor;\n  //         ctx.beginPath();\n  //         ctx.arc(arc.round.radius * Math.sin(startAngle), arc.round.radius * Math.cos(startAngle), arc.round.thickness, 0, 2 * Math.PI);\n  //         ctx.arc(arc.round.radius * Math.sin(endAngle), arc.round.radius * Math.cos(endAngle), arc.round.thickness, 0, 2 * Math.PI);\n  //         ctx.closePath();\n  //         ctx.fill();\n  //         ctx.restore();\n  //       }\n  //     },\n  //   });\n  // }, [])\n  // ! round corners doughnut\n\n  return (\n    <div className={classes.customDoughnut}>\n      <Doughnut\n        data={data}\n        width={size}\n        height={size}\n        options={{\n          responsive: true,\n          maintainAspectRatio: false,\n          cutoutPercentage: 87,\n          animation: offAnimation\n            ? {\n                duration: 0,\n              }\n            : {},\n          tooltips: {\n            enabled: false,\n          },\n          hover: {\n            mode: null,\n          },\n          legend: {\n            display: false,\n          },\n          elements: rounded\n            ? {\n                arc: {\n                  // roundedCornersFor: 0,  //nó bị vòng lặp => chạy 1 lúc là lag vãi lồn\n                },\n              }\n            : {},\n        }}\n      />\n      <div className={classes.absoluteCenter}>\n        <Typography\n          className={\n            vote_average ? `icon-r${Math.round(vote_average * 10)}` : `icon-rNR`\n          }\n          style={{ fontSize: fontSize }}\n        ></Typography>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(CustomDoughnut);\n","import moment from \"moment\";\nconst handleDate = (date) => {\n  let dt = moment(date, \"YYYY-MM-DD\");\n  return dt.format(\"LL\");\n};\n\nexport default handleDate;\n","import chuyenDoiUrl from \"../../helpers/urlSlug\";\nimport { Link } from \"react-router-dom\";\nimport handleDate from \"../../helpers/handleDate\";\n\nconst MovieCard = ({ value }) => {\n  const theme = document\n    .getElementsByTagName(\"HTML\")[0]\n    .getAttribute(\"data-theme\");\n  return (\n    <div className=\"movie\" style={{ border: theme === \"dark\" && \"none\" }}>\n      <Link to={\"/movie/\" + value.id + \"-\" + chuyenDoiUrl(value.title)}>\n        <img src={value.poster_path} alt=\"\" />\n      </Link>\n      <div className=\"root\">\n        <div>\n          <Link to={\"/movie/\" + value.id + \"-\" + chuyenDoiUrl(value.title)}>\n            {\" \"}\n            <h6 className=\"title\">{value.title}</h6>\n          </Link>\n          <p className=\"date\">\n            {value.release_date && handleDate(value.release_date)}\n          </p>\n        </div>\n        <p className=\"overview\">{value.overview}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default MovieCard;\n","/*! Fast Average Color | © 2020 Denis Seleznev | MIT License | https://github.com/fast-average-color/fast-average-color */\nfunction toHex(num) {\n    const str = num.toString(16);\n\n    return str.length === 1 ? '0' + str : str;\n}\n\nfunction arrayToHex(arr) {\n    return '#' + arr.map(toHex).join('');\n}\n\nfunction isDark(color) {\n    // http://www.w3.org/TR/AERT#color-contrast\n    const result = (color[0] * 299 + color[1] * 587 + color[2] * 114) / 1000;\n\n    return result < 128;\n}\n\nfunction prepareIgnoredColor(color) {\n    if (!color) { return color; }\n\n    if (Array.isArray(color)) {\n        return typeof color[0] === 'number' ? [color.slice()] : color;\n    }\n\n    return [color];\n}\n\nfunction isIgnoredColor(data, index, ignoredColor) {\n    for (let i = 0; i < ignoredColor.length; i++) {\n        if (isIgnoredColorAsNumbers(data, index, ignoredColor[i])) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nfunction isIgnoredColorAsNumbers(data, index, ignoredColor) {\n    switch (ignoredColor.length) {\n        case 3:\n            // [red, green, blue]\n            if (isIgnoredRGBColor(data, index, ignoredColor)) {\n                return true;\n            }\n\n            break;\n        case 4:\n            // [red, green, blue, alpha]\n            if (isIgnoredRGBAColor(data, index, ignoredColor)) {\n                return true;\n            }\n\n            break;\n        case 5:\n            // [red, green, blue, alpha, threshold]\n            if (isIgnoredRGBAColorWithThreshold(data, index, ignoredColor)) {\n                return true;\n            }\n\n            break;\n        default:\n            return false;\n    }\n}\n\nfunction isIgnoredRGBColor(data, index, ignoredColor) {\n    // Ignore if the pixel are transparent.\n    if (data[index + 3] !== 255) {\n        return true;\n    }\n\n    if (data[index] === ignoredColor[0] &&\n        data[index + 1] === ignoredColor[1] &&\n        data[index + 2] === ignoredColor[2]\n    ) {\n        return true;\n    }\n\n    return false;\n}\n\nfunction isIgnoredRGBAColor(data, index, ignoredColor) {\n    if (data[index + 3] && ignoredColor[3]) {\n        return data[index] === ignoredColor[0] &&\n            data[index + 1] === ignoredColor[1] &&\n            data[index + 2] === ignoredColor[2] &&\n            data[index + 3] === ignoredColor[3];\n    }\n\n    // Ignore rgb components if the pixel are fully transparent.\n    return data[index + 3] === ignoredColor[3];\n}\n\nfunction inRange(colorComponent, ignoredColorComponent, value) {\n    return colorComponent >= (ignoredColorComponent - value) &&\n        colorComponent <= (ignoredColorComponent + value);\n}\n\nfunction isIgnoredRGBAColorWithThreshold(data, index, ignoredColor) {\n    const redIgnored = ignoredColor[0];\n    const greenIgnored = ignoredColor[1];\n    const blueIgnored = ignoredColor[2];\n    const alphaIgnored = ignoredColor[3];\n    const threshold = ignoredColor[4];\n    const alphaData = data[index + 3];\n\n    const alphaInRange = inRange(alphaData, alphaIgnored, threshold);\n    if (!alphaIgnored) {\n        return alphaInRange;\n    }\n\n    if (!alphaData && alphaInRange) {\n        return true;\n    }\n\n    if (inRange(data[index], redIgnored, threshold) &&\n        inRange(data[index + 1], greenIgnored, threshold) &&\n        inRange(data[index + 2], blueIgnored, threshold) &&\n        alphaInRange\n    ) {\n        return true;\n    }\n\n    return false;\n}\n\nfunction dominantAlgorithm(arr, len, options) {\n    const colorHash = {};\n    const divider = 24;\n    const ignoredColor = options.ignoredColor;\n    const step = options.step;\n\n    for (let i = 0; i < len; i += step) {\n        const red = arr[i];\n        const green = arr[i + 1];\n        const blue = arr[i + 2];\n        const alpha = arr[i + 3];\n\n        if (ignoredColor && isIgnoredColor(arr, i, ignoredColor)) {\n            continue;\n        }\n\n        const key = Math.round(red / divider) + ',' +\n                Math.round(green / divider) + ',' +\n                Math.round(blue / divider);\n\n        if (colorHash[key]) {\n            colorHash[key] = [\n                colorHash[key][0] + red * alpha,\n                colorHash[key][1] + green * alpha,\n                colorHash[key][2] + blue * alpha,\n                colorHash[key][3] + alpha,\n                colorHash[key][4] + 1\n            ];\n        } else {\n            colorHash[key] = [red * alpha, green * alpha, blue * alpha, alpha, 1];\n        }\n    }\n\n    const buffer = Object.keys(colorHash)\n        .map(key => colorHash[key])\n        .sort((a, b) => {\n            const countA = a[4];\n            const countB = b[4];\n\n            return countA > countB ?  -1 : countA === countB ? 0 : 1;\n        });\n\n    const max = buffer[0];\n\n    const redTotal = max[0];\n    const greenTotal = max[1];\n    const blueTotal = max[2];\n\n    const alphaTotal = max[3];\n    const count = max[4];\n\n    return alphaTotal ? [\n        Math.round(redTotal / alphaTotal),\n        Math.round(greenTotal / alphaTotal),\n        Math.round(blueTotal / alphaTotal),\n        Math.round(alphaTotal / count)\n    ] : options.defaultColor;\n}\n\nfunction simpleAlgorithm(arr, len, options) {\n    let redTotal = 0;\n    let greenTotal = 0;\n    let blueTotal = 0;\n    let alphaTotal = 0;\n    let count = 0;\n\n    const ignoredColor = options.ignoredColor;\n    const step = options.step;\n\n    for (let i = 0; i < len; i += step) {\n        const alpha = arr[i + 3];\n        const red = arr[i] * alpha;\n        const green = arr[i + 1] * alpha;\n        const blue = arr[i + 2] * alpha;\n\n        if (ignoredColor && isIgnoredColor(arr, i, ignoredColor)) {\n            continue;\n        }\n\n        redTotal += red;\n        greenTotal += green;\n        blueTotal += blue;\n        alphaTotal += alpha;\n\n        count++;\n    }\n\n    return alphaTotal ? [\n        Math.round(redTotal / alphaTotal),\n        Math.round(greenTotal / alphaTotal),\n        Math.round(blueTotal / alphaTotal),\n        Math.round(alphaTotal / count)\n    ] : options.defaultColor;\n}\n\nfunction sqrtAlgorithm(arr, len, options) {\n    let redTotal = 0;\n    let greenTotal = 0;\n    let blueTotal = 0;\n    let alphaTotal = 0;\n    let count = 0;\n\n    const ignoredColor = options.ignoredColor;\n    const step = options.step;\n\n    for (let i = 0; i < len; i += step) {\n        const red = arr[i];\n        const green = arr[i + 1];\n        const blue = arr[i + 2];\n        const alpha = arr[i + 3];\n\n        if (ignoredColor && isIgnoredColor(arr, i, ignoredColor)) {\n            continue;\n        }\n\n        redTotal += red * red * alpha;\n        greenTotal += green * green * alpha;\n        blueTotal += blue * blue * alpha;\n        alphaTotal += alpha;\n\n        count++;\n    }\n\n    return alphaTotal ? [\n        Math.round(Math.sqrt(redTotal / alphaTotal)),\n        Math.round(Math.sqrt(greenTotal / alphaTotal)),\n        Math.round(Math.sqrt(blueTotal / alphaTotal)),\n        Math.round(alphaTotal / count)\n    ] : options.defaultColor;\n}\n\nfunction getDefaultColor(options) {\n    return getOption(options, 'defaultColor', [0, 0, 0, 0]);\n}\n\nfunction getOption(options, name, defaultValue) {\n    return typeof options[name] === 'undefined' ? defaultValue : options[name];\n}\n\nconst MIN_SIZE = 10;\nconst MAX_SIZE = 100;\n\nfunction isSvg(filename) {\n    return filename.search(/\\.svg(\\?|$)/i) !== -1;\n}\n\nfunction getOriginalSize(resource) {\n    if (resource instanceof HTMLImageElement) {\n        let width = resource.naturalWidth;\n        let height = resource.naturalHeight;\n\n        // For SVG images with only viewBox attr.\n        if (!resource.naturalWidth && isSvg(resource.src)) {\n            width = height = MAX_SIZE;\n        }\n\n        return {\n            width,\n            height,\n        };\n    }\n\n    if (resource instanceof HTMLVideoElement) {\n        return {\n            width: resource.videoWidth,\n            height: resource.videoHeight\n        };\n    }\n\n    return {\n        width: resource.width,\n        height: resource.height\n    };\n}\n\nfunction prepareSizeAndPosition(originalSize, options) {\n    const srcLeft = getOption(options, 'left', 0);\n    const srcTop = getOption(options, 'top', 0);\n    const srcWidth = getOption(options, 'width', originalSize.width);\n    const srcHeight = getOption(options, 'height', originalSize.height);\n\n    let destWidth = srcWidth;\n    let destHeight = srcHeight;\n\n    if (options.mode === 'precision') {\n        return {\n            srcLeft,\n            srcTop,\n            srcWidth,\n            srcHeight,\n            destWidth,\n            destHeight\n        };\n    }\n\n    let factor;\n\n    if (srcWidth > srcHeight) {\n        factor = srcWidth / srcHeight;\n        destWidth = MAX_SIZE;\n        destHeight = Math.round(destWidth / factor);\n    } else {\n        factor = srcHeight / srcWidth;\n        destHeight = MAX_SIZE;\n        destWidth = Math.round(destHeight / factor);\n    }\n\n    if (\n        destWidth > srcWidth || destHeight > srcHeight ||\n        destWidth < MIN_SIZE || destHeight < MIN_SIZE\n    ) {\n        destWidth = srcWidth;\n        destHeight = srcHeight;\n    }\n\n    return {\n        srcLeft,\n        srcTop,\n        srcWidth,\n        srcHeight,\n        destWidth,\n        destHeight\n    };\n}\n\nfunction makeCanvas() {\n    return typeof window === 'undefined' ?\n        new OffscreenCanvas(1, 1) :\n        document.createElement('canvas');\n}\n\nconst ERROR_PREFIX = 'FastAverageColor: ';\n\nfunction outputError(options, text, details) {\n    if (!options.silent) {\n        console.error(ERROR_PREFIX + text);\n\n        if (details) {\n            console.error(details);\n        }\n    }\n}\n\nfunction getError(text) {\n    return Error(ERROR_PREFIX + text);\n}\n\nclass FastAverageColor {\n    /**\n     * Get asynchronously the average color from not loaded image.\n     *\n     * @param {string | HTMLImageElement | HTMLVideoElement | HTMLCanvasElement | null} resource\n     * @param {FastAverageColorOptions} [options]\n     *\n     * @returns {Promise<FastAverageColorOptions>}\n     */\n    getColorAsync(resource, options) {\n        if (!resource) {\n            return Promise.reject(getError('call .getColorAsync() without resource.'));\n        }\n\n        if (typeof resource === 'string') {\n            const img = new Image();\n            img.crossOrigin = '';\n            img.src = resource;\n\n            return this._bindImageEvents(img, options);\n        } else if (resource instanceof Image && !resource.complete) {\n            return this._bindImageEvents(resource, options);\n        } else {\n            const result = this.getColor(resource, options);\n\n            return result.error ? Promise.reject(result.error) : Promise.resolve(result);\n        }\n    }\n\n    /**\n     * Get the average color from images, videos and canvas.\n     *\n     * @param {HTMLImageElement | HTMLVideoElement | HTMLCanvasElement | null} resource\n     * @param {FastAverageColorOptions} [options]\n     *\n     * @returns {FastAverageColorResult}\n     */\n    getColor(resource, options) {\n        options = options || {};\n\n        const defaultColor = getDefaultColor(options);\n\n        if (!resource) {\n            outputError(options, 'call .getColor(null) without resource.');\n\n            return this.prepareResult(defaultColor);\n        }\n\n        const originalSize = getOriginalSize(resource);\n        const size = prepareSizeAndPosition(originalSize, options);\n\n        if (!size.srcWidth || !size.srcHeight || !size.destWidth || !size.destHeight) {\n            outputError(options, `incorrect sizes for resource \"${resource.src}\".`);\n\n            return this.prepareResult(defaultColor);\n        }\n\n        if (!this._ctx) {\n            this._canvas = makeCanvas();\n            this._ctx = this._canvas.getContext && this._canvas.getContext('2d');\n\n            if (!this._ctx) {\n                outputError(options, 'Canvas Context 2D is not supported in this browser.');\n\n                return this.prepareResult(defaultColor);\n            }\n        }\n\n        this._canvas.width = size.destWidth;\n        this._canvas.height = size.destHeight;\n\n        let value = defaultColor;\n\n        try {\n            this._ctx.clearRect(0, 0, size.destWidth, size.destHeight);\n            this._ctx.drawImage(\n                resource,\n                size.srcLeft, size.srcTop,\n                size.srcWidth, size.srcHeight,\n                0, 0,\n                size.destWidth, size.destHeight\n            );\n\n            const bitmapData = this._ctx.getImageData(0, 0, size.destWidth, size.destHeight).data;\n            value = this.getColorFromArray4(bitmapData, options);\n        } catch (e) {\n            outputError(options, `security error (CORS) for resource ${resource.src}.\\nDetails: https://developer.mozilla.org/en/docs/Web/HTML/CORS_enabled_image`, e);\n        }\n\n        return this.prepareResult(value);\n    }\n\n    /**\n     * Get the average color from a array when 1 pixel is 4 bytes.\n     *\n     * @param {number[]|Uint8Array|Uint8ClampedArray} arr\n     * @param {Object} [options]\n     * @param {string} [options.algorithm=\"sqrt\"] \"simple\", \"sqrt\" or \"dominant\"\n     * @param {number[]}  [options.defaultColor=[0, 0, 0, 0]] [red, green, blue, alpha]\n     * @param {number[]}  [options.ignoredColor] [red, green, blue, alpha]\n     * @param {number} [options.step=1]\n     *\n     * @returns {number[]} [red (0-255), green (0-255), blue (0-255), alpha (0-255)]\n     */\n    getColorFromArray4(arr, options) {\n        options = options || {};\n\n        const bytesPerPixel = 4;\n        const arrLength = arr.length;\n        const defaultColor = getDefaultColor(options);\n\n        if (arrLength < bytesPerPixel) {\n            return defaultColor;\n        }\n\n        const len = arrLength - arrLength % bytesPerPixel;\n        const step = (options.step || 1) * bytesPerPixel;\n\n        let algorithm;\n\n        switch (options.algorithm || 'sqrt') {\n            case 'simple':\n                algorithm = simpleAlgorithm;\n                break;\n            case 'sqrt':\n                algorithm = sqrtAlgorithm;\n                break;\n            case 'dominant':\n                algorithm = dominantAlgorithm;\n                break;\n            default:\n                throw getError(`${options.algorithm} is unknown algorithm.`);\n        }\n\n        return algorithm(arr, len, {\n            defaultColor,\n            ignoredColor: prepareIgnoredColor(options.ignoredColor),\n            step\n        });\n    }\n\n    /**\n     * Get color data from value ([r, g, b, a]).\n     *\n     * @param {number[]} value\n     *\n     * @returns {FastAverageColorResult}\n     */\n    prepareResult(value) {\n        const rgb = value.slice(0, 3);\n        const rgba = [].concat(rgb, value[3] / 255);\n        const isDarkColor = isDark(value);\n\n        return {\n            value,\n            rgb: 'rgb(' + rgb.join(',') + ')',\n            rgba: 'rgba(' + rgba.join(',') + ')',\n            hex: arrayToHex(rgb),\n            hexa: arrayToHex(value),\n            isDark: isDarkColor,\n            isLight: !isDarkColor\n        };\n    }\n\n    /**\n     * Destroy the instance.\n     */\n    destroy() {\n        delete this._canvas;\n        delete this._ctx;\n    }\n\n    _bindImageEvents(resource, options) {\n        return new Promise((resolve, reject) => {\n            const onload = () => {\n                unbindEvents();\n\n                const result = this.getColor(resource, options);\n\n                if (result.error) {\n                    reject(result.error);\n                } else {\n                    resolve(result);\n                }\n            };\n\n            const onerror = () => {\n                unbindEvents();\n\n                reject(getError(`Error loading image \"${resource.src}\".`));\n            };\n\n            const onabort = () => {\n                unbindEvents();\n\n                reject(getError(`Image \"${resource.src}\" loading aborted.`));\n            };\n\n            const unbindEvents = () => {\n                resource.removeEventListener('load', onload);\n                resource.removeEventListener('error', onerror);\n                resource.removeEventListener('abort', onabort);\n            };\n\n            resource.addEventListener('load', onload);\n            resource.addEventListener('error', onerror);\n            resource.addEventListener('abort', onabort);\n        });\n    }\n}\n\n/**\n * @typeof {Object} FastAverageColorOptions\n *\n * @param {number[]}  [options.defaultColor=[0, 0, 0, 0]] [red, green, blue, alpha]\n * @param {number[]}  [options.ignoredColor] [red, green, blue, alpha]\n * @param {string} [options.mode=\"speed\"] \"precision\" or \"speed\"\n * @param {string} [options.algorithm=\"sqrt\"] \"simple\", \"sqrt\" or \"dominant\"\n * @param {number} [options.step=1]\n * @param {number} [options.left=0]\n * @param {number} [options.top=0]\n * @param {number} [options.width=width of resource]\n * @param {number} [options.height=height of resource]\n * @param {boolean} [options.silent] Disable error output via console.error\n */\n\n/**\n * @typedef {Object} FastAverageColorResult\n *\n * @property {string} rgba\n * @property {string} rgb\n * @property {string} hex\n * @property {string} hexa\n * @property {number[]} value\n * @property {boolean} isDark\n * @property {boolean} isLight\n * @property {Error?} error\n */\n\nexport default FastAverageColor;\n","import {\n  API_KEY,\n  API_URL,\n  IMAGE_URL,\n  POSTER_SIZE,\n  BACKDROP_SIZE,\n} from \"./Config\";\nimport { no_image } from \"../assets\";\nimport { no_poster } from \"../assets\";\nimport API from \"./axiosConfig\";\nexport const fetchCollection = async (id) => {\n  try {\n    const { data } = await API.get(`${API_URL}collection/${id}`, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n    const checkData = {\n      ...data,\n      poster_path: data.poster_path\n        ? IMAGE_URL + POSTER_SIZE + data.poster_path\n        : no_poster,\n      backdrop_path: data.backdrop_path\n        ? IMAGE_URL + BACKDROP_SIZE + data.backdrop_path\n        : no_image,\n      parts: data.parts.map((item) => ({\n        ...item,\n        poster_path: item.poster_path\n          ? IMAGE_URL + POSTER_SIZE + item.poster_path\n          : no_poster,\n      })),\n      vote_average: data.parts.reduce(\n        (acc, cur) => acc + cur.vote_average / data.parts.length,\n        0\n      ),\n    };\n    return checkData;\n  } catch (e) {\n    console.log(e);\n  }\n};\n","import { makeStyles, Grid } from \"@material-ui/core\";\nimport \"../../scss/components/Movie_page.scss\";\nimport { useMediaQuery } from \"react-responsive\";\nimport CustomDoughnut from \"../Doughnut/CustomDoughnut\";\nimport { no_image } from \"../../assets\";\nconst useStyles = makeStyles((theme) => ({\n  styledDoughnut: {\n    paddingRight: \"0 !important\",\n  },\n}));\nconst HeaderCollection = ({ collection, data, data2 }) => {\n  const classes = useStyles();\n  const isMobileDevice = useMediaQuery({\n    query: \"(max-device-width: 991.98px)\",\n  });\n  const theme = document\n    .getElementsByTagName(\"HTML\")[0]\n    .getAttribute(\"data-theme\");\n  const backdrop =\n    collection.backdrop_path === no_image ? null : collection.backdrop_path;\n  return (\n    <div\n      className=\"main\"\n      style={{\n        backgroundImage:\n          theme === \"light\"\n            ? !isMobileDevice\n              ? `linear-gradient(to right, rgba(${data},1.00) 150px,rgba(${data},0.80) 100%),url(${backdrop})`\n              : `linear-gradient( rgba(${data},1.00) 0px, rgba(${data},0.80) 100%),url(${backdrop})`\n            : `linear-gradient(to right, rgb(24, 24, 24) 150px, rgba(24, 24, 24, 0.8) 100%),url(${backdrop})`,\n      }}\n    >\n      <div\n        className=\"container py-md-1 py-0 inBackDrop my-auto\"\n        style={{ minHeight: \"0vh\" }}\n      >\n        <div className=\"row collection\">\n          <div className=\"col-md-12 col-lg-4 col-xl-3 col-12\">\n            {<img src={collection.poster_path} alt=\"\" loading=\"eager\" />}\n          </div>\n          <div\n            className=\"col-md pl-xl-4 pl-0 mt-xl-0 mt-2\"\n            style={{ color: theme === \"light\" ? data2 : \"white\" }}\n          >\n            <h3 style={{ marginBottom: \"10px\" }}>{collection.name}</h3>\n            {/* {\n                            !isMobileDevice ? (<p className='center'>{certification != '' && <span style={{ border: '1px solid', padding: '0.06em 4px 0.06em 8px', borderRadius: '2px', marginRight: '8px', opacity: '0.7' }}>{certification}  </span>}{handleDate(movie.release_date)}&nbsp; {movie.iso_3166_1 !== '' && <span>({movie.iso_3166_1})</span>}&nbsp; •&nbsp; {genres(movie.genres)}&nbsp; • &nbsp;{timeConvert(movie.runtime)} </p>)\n                                :\n                                (<><p className='center m-0'>{certification != '' && <span style={{ border: '1px solid', padding: '0.06em 4px 0.06em 8px', borderRadius: '2px', marginRight: '8px', opacity: '0.7' }}>{certification}  </span>}{handleDate(movie.release_date)}&nbsp; {movie.iso_3166_1 !== '' && <span>({movie.iso_3166_1})</span>}&nbsp; •&nbsp;&nbsp;{timeConvert(movie.runtime)}</p>\n                                    <p className='center'>{genres(movie.genres)}</p></>)\n                        } */}\n            <div className=\"doughnut\">\n              <Grid item className={classes.styledDoughnut}>\n                <CustomDoughnut\n                  offAnimation={isMobileDevice ? true : false}\n                  rounded={true}\n                  vote_average={collection.vote_average}\n                  size={60}\n                />\n              </Grid>\n              <h5 style={{ fontWeight: \"700\" }}>\n                User<br></br> Score\n              </h5>\n            </div>\n            <div className=\"overview\">\n              <h4>Overview</h4>\n              {\n                <p className=\"pOverview\">\n                  {collection.overview\n                    ? collection.overview\n                    : \"We don't have an overview translated in English.\"}\n                </p>\n              }\n            </div>\n            <div>\n              <h6>Number of Movies: {collection.parts.length}</h6>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default HeaderCollection;\n","import MovieCard from \"../KeywordPage/MovieCard\";\n\nconst ListMovie = ({ movie }) => {\n  return movie.map((item, index) => <MovieCard value={item} key={index} />);\n};\n\nexport default ListMovie;\n","import { useEffect, useState } from \"react\";\nimport \"../../css/Main.scss\";\nimport { fetchCollection } from \"./../../api/fetchCollection\";\nimport FastAverageColor from \"fast-average-color\";\nimport Loader from \"../Loading/Loader\";\nimport HeaderCollection from \"./HeaderCollection\";\nimport ListMovie from \"./ListMovie\";\nimport Footer from \"./../Footer/Footer\";\nconst Index = ({ props }) => {\n  const [imgsLoaded, setImgsLoaded] = useState(false);\n  const id = props.match.params.id;\n  const [data, setData] = useState(null);\n  const [dt, setDt] = useState(null); //background color\n  const [dt2, setDt2] = useState(null); //text color\n  const hexToRgb = (hex) =>\n    hex\n      .replace(\n        /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i,\n        (m, r, g, b) => \"#\" + r + r + g + g + b + b\n      )\n      .substring(1)\n      .match(/.{2}/g)\n      .map((x) => parseInt(x, 16));\n  useEffect(() => {\n    const fetch = async () => {\n      await fetchCollection(id).then((res) => {\n        setData(res);\n        //preload poster image\n        const hihi = new Image();\n        const haha = new Image();\n        hihi.src = res.poster_path; // by setting an src, you trigger browser download\n        hihi.onload = () => {\n          // when it finishes loading\n          const fac = new FastAverageColor();\n          fac\n            .getColorAsync(hihi.src, { algorithm: \"dominant\" })\n            .then((color) => {\n              // console.log(color);\n              // let contrast = getContrastYIQ(color.hex.slice(1, 7));\n              let contrast = color.isLight ? \"black\" : \"white\";\n              setDt(hexToRgb(color.hex));\n              setDt2(contrast);\n              //positive for lighten, negative for darken\n            })\n            .catch((e) => {\n              console.log(e);\n            });\n          haha.src = res.backdrop_path;\n        };\n        haha.onload = () => {\n          //source ảnh ko lỗi thì vào đây\n          setImgsLoaded(true);\n        };\n        haha.onerror = () => {\n          //source ảnh bị lỗi 404 thì vào đây\n          setImgsLoaded(true);\n        };\n      });\n    };\n    fetch();\n  }, [id]);\n  return imgsLoaded ? (\n    <div id=\"main\">\n      <HeaderCollection collection={data} data={dt} data2={dt2} />\n      <div className=\"container\">\n        <h3\n          style={{\n            marginBottom: \"20px\",\n            fontWeight: \"700\",\n            fontSize: \"22.4px\",\n          }}\n        >\n          {data.parts.length} movies\n        </h3>\n        <div className=\"movie_list\">\n          <ListMovie movie={data.parts} />\n        </div>\n      </div>\n      <Footer />\n    </div>\n  ) : (\n    <Loader />\n  );\n};\n\nexport default Index;\n","import CollectionPage from \"../components/CollectionPage\";\nconst Collection = (props) => {\n  return <CollectionPage props={props} />;\n};\nexport default Collection;\n"],"sourceRoot":""}