{"version":3,"sources":["api/popularMovie.js","api/popularTv.js","api/popularPeople.js","components/PopularPage/PopularResults.js","components/PopularPage/index.js","pages/Popular.js"],"names":["popularMovie","query","page","a","axios","get","API_URL","params","api_key","API_KEY","data","modifiedData","results","map","movie","poster_path","IMAGE_URL","no_poster","console","log","popularTv","tv","popularPeople","item","profile_path","no_user","useStyles","makeStyles","theme","tab","padding","marginRight","background","breakpoints","down","label","display","justifyContent","alignItems","width","paddingLeft","paddingRight","fontWeight","span","borderRadius","marginLeft","spacing","PopularResults","string","movieResults","type","classes","matches","useMediaQuery","allTabs","total_results","people","Card","style","Box","p","color","backgroundColor","Typography","variant","charAt","toUpperCase","slice","Tabs","orientation","scrollButtons","indicatorColor","value","Tab","component","Link","to","selected","className","toLocaleString","Index","props","match","parseInt","useState","setResults","loading","setLoading","resultsLoading","setResultsLoading","useEffect","window","scrollTo","Promise","all","searchResults","fetchData","isMobileDevice","DoubleRing","id","Container","Grid","container","md","xs","height","CircularProgress","Movie","Footer","Popular","PopularPage"],"mappings":"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","file":"static/js/27.a58cc430.chunk.js","sourcesContent":["import axios from 'axios';\r\nimport { no_poster } from '../assets';\r\nimport { API_KEY, API_URL, IMAGE_URL } from './Config';\r\n\r\nexport const popularMovie = async (query, page) => {\r\n    try {\r\n        const { data } = await axios.get(`${API_URL}movie/popular`, {\r\n            params: {\r\n                api_key: API_KEY,\r\n                query,\r\n                page\r\n            }\r\n        })\r\n        const modifiedData = {\r\n            ...data,\r\n            results: data.results.map((movie) => ({\r\n                ...movie,\r\n                poster_path: movie.poster_path\r\n                    ? IMAGE_URL + 'w300_and_h450_bestv2' + movie.poster_path\r\n                    : no_poster\r\n            }))\r\n        }\r\n        return modifiedData;\r\n    } catch (e) {\r\n        console.log(e);\r\n    }\r\n}\r\n","import axios from 'axios';\r\nimport { no_poster } from '../assets';\r\nimport { API_KEY, API_URL, IMAGE_URL } from './Config';\r\n\r\nexport const popularTv = async (query, page) => {\r\n    try {\r\n        const { data } = await axios.get(`${API_URL}tv/popular`, {\r\n            params: {\r\n                api_key: API_KEY,\r\n                query,\r\n                page\r\n            }\r\n        })\r\n        const modifiedData = {\r\n            ...data,\r\n            results: data.results.map((tv) => ({\r\n                ...tv,\r\n                poster_path: tv.poster_path\r\n                    ? IMAGE_URL + 'w300_and_h450_bestv2' + tv.poster_path\r\n                    : no_poster\r\n            }))\r\n        }\r\n        return modifiedData;\r\n    } catch (e) {\r\n        console.log(e);\r\n    }\r\n}\r\n","import axios from 'axios';\r\nimport { no_user } from '../assets';\r\nimport { API_KEY, API_URL, IMAGE_URL } from './Config';\r\n\r\nexport const popularPeople = async (query, page) => {\r\n    try {\r\n        const { data } = await axios.get(`${API_URL}person/popular`, {\r\n            params: {\r\n                api_key: API_KEY,\r\n                query,\r\n                page\r\n            }\r\n        })\r\n        const modifiedData = {\r\n            ...data,\r\n            results: data.results.map((item) => ({\r\n                ...item,\r\n                poster_path: item.profile_path\r\n                    ? IMAGE_URL + 'w300_and_h450_bestv2' + item.profile_path\r\n                    : no_user\r\n            }))\r\n        }\r\n        return modifiedData;\r\n    } catch (e) {\r\n        console.log(e);\r\n    }\r\n}\r\n","import {\r\n    Box,\r\n    Card,\r\n    makeStyles,\r\n    Tab,\r\n    Tabs,\r\n    Typography,\r\n    useMediaQuery\r\n} from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\nconst useStyles = makeStyles((theme) => ({\r\n    // MuiBox-root:{\r\n    //     backgroundColor:'red'\r\n    // },\r\n    tab: {\r\n        padding: \"24px 12px\",\r\n        marginRight: 0,\r\n        \"&.Mui-selected\": {\r\n            \"& $span\": {\r\n                background: 'white',\r\n            }\r\n        },\r\n        [theme.breakpoints.down(\"sm\")]: {\r\n            padding: 12,\r\n        },\r\n        '&:hover': {\r\n            \"& $span\": {\r\n                background: 'white',\r\n            }\r\n        }\r\n    },\r\n    label: {\r\n        display: \"flex\",\r\n        justifyContent: \"space-between\",\r\n        alignItems: \"center\",\r\n        width: \"100%\",\r\n        paddingLeft: 4,\r\n        paddingRight: 4,\r\n        fontWeight: \"inherit\",\r\n    },\r\n    span: {\r\n        background: '#E0E0E0',\r\n        padding: \"0 10px\",\r\n        borderRadius: 10,\r\n        marginLeft: theme.spacing(1),\r\n    },\r\n}));\r\nconst PopularResults = ({ params, movieResults, type }) => {\r\n    const classes = useStyles();\r\n    const matches = useMediaQuery((theme) => theme.breakpoints.down(\"sm\"));\r\n    const allTabs = [\r\n        {\r\n            type: \"movie\",\r\n            label: \"Movies\",\r\n            total_results: movieResults.movie.total_results,\r\n        },\r\n        {\r\n            type: \"tv\",\r\n            label: \"Tv Shows\",\r\n            total_results: movieResults.tv.total_results,\r\n        },\r\n        {\r\n            type: \"person\",\r\n            label: \"People\",\r\n            total_results: movieResults.people.total_results,\r\n        }\r\n    ];\r\n    function capitalizeFirstLetter(string) {\r\n        return string.charAt(0).toUpperCase() + string.slice(1);\r\n    }\r\n    return (\r\n        <Card style={{ borderRadius: '8px' }}>\r\n            <Box p={2} color='white' style={{ backgroundColor: '#244360' }}>\r\n                <Typography variant=\"h6\" >{'Popular ' + capitalizeFirstLetter(type) + 's'}</Typography>\r\n            </Box>\r\n            <Tabs\r\n                orientation={matches ? \"horizontal\" : \"vertical\"}\r\n                variant={matches ? \"scrollable\" : \"fullWidth\"}\r\n                scrollButtons=\"on\"\r\n                indicatorColor=\"primary\"\r\n                value={params.type}\r\n            >\r\n                {\r\n                    allTabs.map((tab) => (\r\n                        <Tab\r\n                            key={tab.type}\r\n                            component={Link}\r\n                            to={`/${tab.type}/1`}\r\n                            selected={tab.type === params.type}\r\n                            value={tab.type}\r\n                            className={classes.tab}\r\n                            label={\r\n                                <Typography className={classes.label}>\r\n                                    {tab.label}\r\n                                    <span className={classes.span}>{tab.total_results.toLocaleString()}</span>\r\n                                </Typography>\r\n                            }\r\n                        >\r\n                        </Tab>\r\n                    ))\r\n                }\r\n            </Tabs>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default PopularResults;","import { useState, useEffect } from \"react\";\r\nimport { popularMovie } from '../../api/popularMovie';\r\nimport { popularTv } from '../../api/popularTv';\r\nimport { popularPeople } from '../../api/popularPeople';\r\nimport '../../scss/components/Popular_page.scss';\r\nimport { Box, CircularProgress, Container, Grid } from \"@material-ui/core\";\r\nimport PopularResults from './PopularResults';\r\nimport DoubleRing from '../Loading/DoubleRing';\r\nimport Movie from './Movie';\r\nimport Footer from '../Footer/Footer'\r\nimport { useMediaQuery } from 'react-responsive'\r\nconst Index = ({ props }) => {\r\n    const params = props.match.params;\r\n    const page = parseInt(params.page);\r\n    const { query, type } = params;\r\n    const [results, setResults] = useState({});\r\n    const [loading, setLoading] = useState(true);\r\n    const [resultsLoading, setResultsLoading] = useState(true);\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0);\r\n        const fetchData = async () => {\r\n            setResultsLoading(true);\r\n            const searchResults = await Promise.all(\r\n                [\r\n                    popularMovie(query, page),\r\n                    popularTv(query, page),\r\n                    popularPeople(query, page)\r\n                ]\r\n            )\r\n            const [movie, tv, people] = searchResults;\r\n            setResults({ movie, tv, people });\r\n            // console.log(searchResults);\r\n            setLoading(false);\r\n            setResultsLoading(false);\r\n        }\r\n        fetchData()\r\n    }, [query, page])\r\n    const isMobileDevice = useMediaQuery({\r\n        query: '(max-device-width: 991.98px)'\r\n    })\r\n    return loading ? <DoubleRing />\r\n        :\r\n        <>\r\n            <div id=\"search\">\r\n                <Container>\r\n                    <Grid container spacing={3}>\r\n                        <Grid item md={3} xs={12}>\r\n                            <PopularResults\r\n                                params={params}\r\n                                movieResults={results}\r\n                                type={type}\r\n                            >\r\n                            </PopularResults>\r\n                        </Grid>\r\n                        <Grid item md={9} xs={12} style={{ paddingLeft: !isMobileDevice ? '14px' : '12px' }}>\r\n                            {\r\n                                resultsLoading ? (\r\n                                    <Box\r\n                                        height={350}\r\n                                        display=\"flex\"\r\n                                        justifyContent=\"center\"\r\n                                        alignItems=\"center\"\r\n                                    >\r\n                                        <CircularProgress color='primary' />\r\n                                    </Box>\r\n                                ) : (\r\n                                        <>\r\n                                            {\r\n                                                type === 'movie' && (\r\n                                                    <Movie type={type} movie={results.movie} params={params} />\r\n                                                )\r\n                                            }\r\n                                            {\r\n                                                type === 'tv' && (\r\n                                                    <Movie type={type} movie={results.tv} params={params} />\r\n                                                )\r\n                                            }\r\n                                            {\r\n                                                type === 'person' && (\r\n                                                    <Movie type={type} movie={results.people} params={params} />\r\n                                                )\r\n                                            }\r\n                                        </>\r\n                                    )\r\n                            }\r\n                        </Grid>\r\n                    </Grid>\r\n                </Container>\r\n            </div>\r\n            <Footer />\r\n        </>\r\n};\r\n\r\nexport default Index;","import PopularPage from '../components/PopularPage'\r\n\r\nconst Popular = (props) => {\r\n    return (\r\n        <PopularPage props={props} />\r\n    );\r\n};\r\nexport default Popular\r\n"],"sourceRoot":""}