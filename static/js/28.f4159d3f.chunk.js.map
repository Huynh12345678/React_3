{"version":3,"sources":["api/searchTv.js","api/searchPeople.js","api/searchKeyword.js","api/searchCompany.js","api/searchCollection.js","components/SearchPage/SearchResults.js","components/SearchPage/index.js","pages/Search.js"],"names":["searchTv","query","page","a","axios","get","API_URL","params","api_key","API_KEY","data","modifiedData","results","map","tv","poster_path","IMAGE_URL","no_poster","console","log","searchPeople","item","profile_path","no_user","searchKeyword","searchCompany","logo_path","searchCollection","useStyles","makeStyles","theme","tab","padding","marginRight","background","breakpoints","down","label","display","justifyContent","alignItems","width","paddingLeft","paddingRight","fontWeight","span","borderRadius","marginLeft","spacing","SearchResults","movieResults","type","classes","matches","useMediaQuery","allTabs","total_results","movie","people","company","collection","keyword","Card","style","Box","p","color","backgroundColor","Typography","variant","className","Tabs","orientation","scrollButtons","indicatorColor","value","Tab","component","Link","to","selected","toLocaleString","Index","props","match","parseInt","useState","setResults","loading","setLoading","resultsLoading","setResultsLoading","useEffect","window","scrollTo","Promise","all","searchMovie","searchResults","fetchData","isMobileDevice","DoubleRing","id","Container","Grid","container","md","xs","minHeight","height","CircularProgress","Movie","search","Footer","Search","SearchPage"],"mappings":"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","file":"static/js/28.f4159d3f.chunk.js","sourcesContent":["import axios from 'axios';\r\nimport { no_poster } from '../assets';\r\nimport { API_KEY, API_URL, IMAGE_URL } from './Config';\r\n\r\nexport const searchTv = async (query, page) => {\r\n    try {\r\n        const { data } = await axios.get(`${API_URL}search/tv`, {\r\n            params: {\r\n                api_key: API_KEY,\r\n                query,\r\n                page\r\n            }\r\n        })\r\n        const modifiedData = {\r\n            ...data,\r\n            results: data.results.map((tv) => ({\r\n                ...tv,\r\n                poster_path: tv.poster_path\r\n                    ? IMAGE_URL + 'w220_and_h330_face' + tv.poster_path\r\n                    : no_poster\r\n            }))\r\n        }\r\n        return modifiedData;\r\n    } catch (e) {\r\n        console.log(e);\r\n    }\r\n}\r\n","import axios from 'axios';\r\nimport { no_user } from '../assets';\r\nimport { API_KEY, API_URL, IMAGE_URL } from './Config';\r\n\r\nexport const searchPeople = async (query, page) => {\r\n    try {\r\n        const { data } = await axios.get(`${API_URL}search/person`, {\r\n            params: {\r\n                api_key: API_KEY,\r\n                query,\r\n                page\r\n            }\r\n        })\r\n        const modifiedData = {\r\n            ...data,\r\n            results: data.results.map((item) => ({\r\n                ...item,\r\n                poster_path: item.profile_path\r\n                    ? IMAGE_URL + 'w220_and_h330_face' + item.profile_path\r\n                    : no_user\r\n            }))\r\n        }\r\n        return modifiedData;\r\n    } catch (e) {\r\n        console.log(e);\r\n    }\r\n}\r\n","import axios from 'axios';\r\nimport { API_KEY, API_URL } from './Config';\r\n\r\nexport const searchKeyword = async (query, page) => {\r\n    try {\r\n        const { data } = await axios.get(`${API_URL}search/keyword`, {\r\n            params: {\r\n                api_key: API_KEY,\r\n                query,\r\n                page\r\n            }\r\n        })\r\n        const modifiedData = {\r\n            ...data\r\n        }\r\n        return modifiedData;\r\n    } catch (e) {\r\n        console.log(e);\r\n    }\r\n}\r\n","import axios from 'axios';\r\nimport { API_KEY, API_URL, IMAGE_URL } from './Config';\r\n\r\nexport const searchCompany = async (query, page) => {\r\n    try {\r\n        const { data } = await axios.get(`${API_URL}search/company`, {\r\n            params: {\r\n                api_key: API_KEY,\r\n                query,\r\n                page\r\n            }\r\n        })\r\n        const modifiedData = {\r\n            ...data,\r\n            results: data.results.map((item) => ({\r\n                ...item,\r\n                logo_path: item.logo_path ? IMAGE_URL + 'h30' + item.logo_path : null\r\n            }))\r\n        }\r\n        return modifiedData;\r\n    } catch (e) {\r\n        console.log(e);\r\n    }\r\n}\r\n","import axios from 'axios';\r\nimport { no_poster } from '../assets';\r\nimport { API_KEY, API_URL, IMAGE_URL } from './Config';\r\n\r\nexport const searchCollection = async (query, page) => {\r\n    try {\r\n        const { data } = await axios.get(`${API_URL}search/collection`, {\r\n            params: {\r\n                api_key: API_KEY,\r\n                query,\r\n                page\r\n            }\r\n        })\r\n        const modifiedData = {\r\n            ...data,\r\n            results: data.results.map((item) => ({\r\n                ...item,\r\n                poster_path: item.poster_path ? IMAGE_URL + 'w220_and_h330_face' + item.poster_path : no_poster\r\n            }))\r\n        }\r\n        return modifiedData;\r\n    } catch (e) {\r\n        console.log(e);\r\n    }\r\n}\r\n","import {\r\n    Box,\r\n    Card,\r\n    makeStyles,\r\n    Tab,\r\n    Tabs,\r\n    Typography,\r\n    useMediaQuery\r\n} from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\nconst useStyles = makeStyles((theme) => ({\r\n    // MuiBox-root:{\r\n    //     backgroundColor:'red'\r\n    // },\r\n    tab: {\r\n        padding: \"24px 12px\",\r\n        marginRight: 0,\r\n        \"&.Mui-selected\": {\r\n            \"& $span\": {\r\n                background: 'white',\r\n            }\r\n        },\r\n        [theme.breakpoints.down(\"sm\")]: {\r\n            padding: 12,\r\n        },\r\n        '&:hover': {\r\n            \"& $span\": {\r\n                background: 'white',\r\n            }\r\n        }\r\n    },\r\n    label: {\r\n        display: \"flex\",\r\n        justifyContent: \"space-between\",\r\n        alignItems: \"center\",\r\n        width: \"100%\",\r\n        paddingLeft: 4,\r\n        paddingRight: 4,\r\n        fontWeight: \"inherit\",\r\n    },\r\n    span: {\r\n        padding: \"0 10px\",\r\n        background: '#E0E0E0',\r\n        borderRadius: 10,\r\n        marginLeft: theme.spacing(1),\r\n    },\r\n}));\r\nconst SearchResults = ({ params, movieResults, type, query }) => {\r\n    const classes = useStyles();\r\n    const matches = useMediaQuery((theme) => theme.breakpoints.down(\"sm\"));\r\n    const allTabs = [\r\n        {\r\n            type: \"movie\",\r\n            label: \"Movies\",\r\n            total_results: movieResults.movie.total_results,\r\n        },\r\n        {\r\n            type: \"tv\",\r\n            label: \"Tv Shows\",\r\n            total_results: movieResults.tv.total_results,\r\n        },\r\n        {\r\n            type: \"person\",\r\n            label: \"People\",\r\n            total_results: movieResults.people.total_results,\r\n        },\r\n        {\r\n            type: \"companie\",\r\n            label: \"Companies\",\r\n            total_results: movieResults.company.total_results,\r\n        },\r\n        {\r\n            type: \"collection\",\r\n            label: \"Collections\",\r\n            total_results: movieResults.collection.total_results,\r\n        },\r\n        {\r\n            type: \"keyword\",\r\n            label: \"Keywords\",\r\n            total_results: movieResults.keyword.total_results,\r\n        }\r\n    ];\r\n    // function capitalizeFirstLetter(string) {\r\n    //     return string.charAt(0).toUpperCase() + string.slice(1);\r\n    // }\r\n    return (\r\n        <Card style={{ borderRadius: '8px' }}>\r\n            <Box p={2} color='white' style={{ backgroundColor: '#244360' }}>\r\n                <Typography variant=\"h6\" >{'Search Results for \"'}<span className='font-italic'>{query}</span>{'\"'}</Typography>\r\n            </Box>\r\n            <Tabs\r\n                orientation={matches ? \"horizontal\" : \"vertical\"}\r\n                variant={matches ? \"scrollable\" : \"fullWidth\"}\r\n                scrollButtons=\"on\"\r\n                indicatorColor=\"primary\"\r\n                value={params.type}\r\n            >\r\n                {\r\n                    allTabs.map((tab) => (\r\n                        <Tab\r\n                            key={tab.type}\r\n                            component={Link}\r\n                            to={`/search/${tab.type}/${query}/1`}\r\n                            selected={tab.type === params.type}\r\n                            value={tab.type}\r\n                            className={classes.tab}\r\n                            label={\r\n                                <Typography className={classes.label}>\r\n                                    {tab.label}\r\n                                    <span className={classes.span}>{tab.total_results.toLocaleString()}</span>\r\n                                </Typography>\r\n                            }\r\n                        >\r\n                        </Tab>\r\n                    ))\r\n                }\r\n            </Tabs>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default SearchResults;","import { useState, useEffect } from \"react\";\r\nimport { searchMovie } from '../../api/searchMovie';\r\nimport { searchTv } from '../../api/searchTv';\r\nimport { searchPeople } from '../../api/searchPeople';\r\nimport { searchKeyword } from '../../api/searchKeyword';\r\nimport { searchCompany } from '../../api/searchCompany';\r\nimport { searchCollection } from '../../api/searchCollection';\r\nimport '../../scss/components/Popular_page.scss';\r\nimport { Box, CircularProgress, Container, Grid } from \"@material-ui/core\";\r\nimport SearchResults from './SearchResults';\r\nimport DoubleRing from '../Loading/DoubleRing';\r\nimport Movie from '../PopularPage/Movie';\r\nimport Footer from '../Footer/Footer'\r\nimport { useMediaQuery } from 'react-responsive'\r\nconst Index = ({ props }) => {\r\n    const params = props.match.params;\r\n    const page = parseInt(params.page);\r\n    const { query, type } = params;\r\n    const [results, setResults] = useState({});\r\n    const [loading, setLoading] = useState(true);\r\n    const [resultsLoading, setResultsLoading] = useState(true);\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0);\r\n        const fetchData = async () => {\r\n            setResultsLoading(true);\r\n            const searchResults = await Promise.all(\r\n                [\r\n                    searchMovie(query, page),\r\n                    searchTv(query, page),\r\n                    searchPeople(query, page),\r\n                    searchKeyword(query, page),\r\n                    searchCompany(query, page),\r\n                    searchCollection(query, page)\r\n                ]\r\n            )\r\n            const [movie, tv, people, keyword, company, collection] = searchResults;\r\n            setResults({ movie, tv, people, keyword, company, collection });\r\n            setLoading(false);\r\n            setResultsLoading(false);\r\n        }\r\n        fetchData()\r\n    }, [query, page])\r\n    const isMobileDevice = useMediaQuery({\r\n        query: '(max-device-width: 991.98px)'\r\n    })\r\n    return loading ? <DoubleRing />\r\n        :\r\n        <>\r\n            <div id=\"search\">\r\n                <Container>\r\n                    <Grid container spacing={3}>\r\n                        <Grid item md={3} xs={12}>\r\n                            <SearchResults\r\n                                params={params}\r\n                                movieResults={results}\r\n                                type={type}\r\n                                query={query}\r\n                            >\r\n                            </SearchResults>\r\n                        </Grid>\r\n                        <Grid item md={9} xs={12} style={{ paddingLeft: !isMobileDevice ? '14px' : '12px' }}>\r\n                            <section style={{ minHeight: !isMobileDevice ? '552px' : 'auto' }}>\r\n                                {\r\n                                    resultsLoading ? (\r\n                                        <Box\r\n                                            height={350}\r\n                                            display=\"flex\"\r\n                                            justifyContent=\"center\"\r\n                                            alignItems=\"center\"\r\n                                        >\r\n                                            <CircularProgress color='primary' />\r\n                                        </Box>\r\n                                    ) : (\r\n                                            <>\r\n                                                {\r\n                                                    type === 'movie' && (\r\n                                                        <Movie type={type} movie={results.movie} params={params} search={true} />\r\n                                                    )\r\n                                                }\r\n                                                {\r\n                                                    type === 'tv' && (\r\n                                                        <Movie type={type} movie={results.tv} params={params} search={true} />\r\n                                                    )\r\n                                                }\r\n                                                {\r\n                                                    type === 'person' && (\r\n                                                        <Movie type={type} movie={results.people} params={params} search={true} />\r\n                                                    )\r\n                                                }\r\n                                                {\r\n                                                    type === 'keyword' && (\r\n                                                        <Movie type={type} movie={results.keyword} params={params} />\r\n                                                    )\r\n                                                }\r\n                                                {\r\n                                                    type === 'companie' && (\r\n                                                        <Movie type={type} movie={results.company} params={params} />\r\n                                                    )\r\n                                                }\r\n                                                {\r\n                                                    type === 'collection' && (\r\n                                                        <Movie type={type} movie={results.collection} params={params} />\r\n                                                    )\r\n                                                }\r\n\r\n                                            </>\r\n                                        )\r\n                                }\r\n                            </section>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Container>\r\n            </div>\r\n            <Footer />\r\n        </>\r\n};\r\n\r\nexport default Index;","import SearchPage from './../components/SearchPage';\r\nconst Search = (props) => {\r\n    return (\r\n        <SearchPage props={props} />\r\n    );\r\n};\r\nexport default Search"],"sourceRoot":""}